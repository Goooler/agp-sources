// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/android_apk_installer_config.proto

package com.android.tools.utp.plugins.host.apkinstaller.proto;

public final class AndroidApkInstallerConfigProto {
  private AndroidApkInstallerConfigProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface InstallableApkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Paths to all APK(s) to install.
     * </pre>
     *
     * <code>repeated string apk_paths = 1;</code>
     * @return A list containing the apkPaths.
     */
    java.util.List<java.lang.String>
        getApkPathsList();
    /**
     * <pre>
     * Paths to all APK(s) to install.
     * </pre>
     *
     * <code>repeated string apk_paths = 1;</code>
     * @return The count of apkPaths.
     */
    int getApkPathsCount();
    /**
     * <pre>
     * Paths to all APK(s) to install.
     * </pre>
     *
     * <code>repeated string apk_paths = 1;</code>
     * @param index The index of the element to return.
     * @return The apkPaths at the given index.
     */
    java.lang.String getApkPaths(int index);
    /**
     * <pre>
     * Paths to all APK(s) to install.
     * </pre>
     *
     * <code>repeated string apk_paths = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the apkPaths at the given index.
     */
    com.google.protobuf.ByteString
        getApkPathsBytes(int index);

    /**
     * <pre>
     * The APK package manager install options to be used to install the APK.
     * </pre>
     *
     * <code>.com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption install_options = 2;</code>
     * @return Whether the installOptions field is set.
     */
    boolean hasInstallOptions();
    /**
     * <pre>
     * The APK package manager install options to be used to install the APK.
     * </pre>
     *
     * <code>.com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption install_options = 2;</code>
     * @return The installOptions.
     */
    com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption getInstallOptions();
    /**
     * <pre>
     * The APK package manager install options to be used to install the APK.
     * </pre>
     *
     * <code>.com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption install_options = 2;</code>
     */
    com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOptionOrBuilder getInstallOptionsOrBuilder();

    /**
     * <pre>
     * If true, the installed APK(s) are uninstalled after test execution.
     * </pre>
     *
     * <code>bool uninstall_after_test = 3;</code>
     * @return The uninstallAfterTest.
     */
    boolean getUninstallAfterTest();

    /**
     * <pre>
     * Package name of APKs installed during test
     * </pre>
     *
     * <code>repeated string apks_package_name = 4;</code>
     * @return A list containing the apksPackageName.
     */
    java.util.List<java.lang.String>
        getApksPackageNameList();
    /**
     * <pre>
     * Package name of APKs installed during test
     * </pre>
     *
     * <code>repeated string apks_package_name = 4;</code>
     * @return The count of apksPackageName.
     */
    int getApksPackageNameCount();
    /**
     * <pre>
     * Package name of APKs installed during test
     * </pre>
     *
     * <code>repeated string apks_package_name = 4;</code>
     * @param index The index of the element to return.
     * @return The apksPackageName at the given index.
     */
    java.lang.String getApksPackageName(int index);
    /**
     * <pre>
     * Package name of APKs installed during test
     * </pre>
     *
     * <code>repeated string apks_package_name = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the apksPackageName at the given index.
     */
    com.google.protobuf.ByteString
        getApksPackageNameBytes(int index);
  }
  /**
   * <pre>
   * Provides information for an APK to be installed.
   * </pre>
   *
   * Protobuf type {@code com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk}
   */
  public static final class InstallableApk extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk)
      InstallableApkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InstallableApk.newBuilder() to construct.
    private InstallableApk(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InstallableApk() {
      apkPaths_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      apksPackageName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new InstallableApk();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InstallableApk(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                apkPaths_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              apkPaths_.add(s);
              break;
            }
            case 18: {
              com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.Builder subBuilder = null;
              if (installOptions_ != null) {
                subBuilder = installOptions_.toBuilder();
              }
              installOptions_ = input.readMessage(com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(installOptions_);
                installOptions_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              uninstallAfterTest_ = input.readBool();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                apksPackageName_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              apksPackageName_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          apkPaths_ = apkPaths_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          apksPackageName_ = apksPackageName_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.class, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.Builder.class);
    }

    public interface InstallOptionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * A command line parameter to be passed into "adb install" command.
       * </pre>
       *
       * <code>repeated string command_line_parameter = 1;</code>
       * @return A list containing the commandLineParameter.
       */
      java.util.List<java.lang.String>
          getCommandLineParameterList();
      /**
       * <pre>
       * A command line parameter to be passed into "adb install" command.
       * </pre>
       *
       * <code>repeated string command_line_parameter = 1;</code>
       * @return The count of commandLineParameter.
       */
      int getCommandLineParameterCount();
      /**
       * <pre>
       * A command line parameter to be passed into "adb install" command.
       * </pre>
       *
       * <code>repeated string command_line_parameter = 1;</code>
       * @param index The index of the element to return.
       * @return The commandLineParameter at the given index.
       */
      java.lang.String getCommandLineParameter(int index);
      /**
       * <pre>
       * A command line parameter to be passed into "adb install" command.
       * </pre>
       *
       * <code>repeated string command_line_parameter = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the commandLineParameter at the given index.
       */
      com.google.protobuf.ByteString
          getCommandLineParameterBytes(int index);

      /**
       * <pre>
       * If true, APK(s) in apk_paths will be installed as split APKs
       * </pre>
       *
       * <code>bool install_as_split_apk = 2;</code>
       * @return The installAsSplitApk.
       */
      boolean getInstallAsSplitApk();

      /**
       * <pre>
       * Optional timeout for installing test APKs
       * 0 value means that UTP uses the default install timeout.
       * Negative value will treated the same as 0.
       * Unit is in seconds
       * </pre>
       *
       * <code>int32 install_apk_timeout = 3;</code>
       * @return The installApkTimeout.
       */
      int getInstallApkTimeout();

      /**
       * <pre>
       * If true, install APKs as test service
       * Install as test service will need some additional flags depending on API level
       * </pre>
       *
       * <code>bool install_as_test_service = 4;</code>
       * @return The installAsTestService.
       */
      boolean getInstallAsTestService();
    }
    /**
     * <pre>
     * Provides information about install option.
     * </pre>
     *
     * Protobuf type {@code com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption}
     */
    public static final class InstallOption extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption)
        InstallOptionOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use InstallOption.newBuilder() to construct.
      private InstallOption(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private InstallOption() {
        commandLineParameter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new InstallOption();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private InstallOption(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  commandLineParameter_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000001;
                }
                commandLineParameter_.add(s);
                break;
              }
              case 16: {

                installAsSplitApk_ = input.readBool();
                break;
              }
              case 24: {

                installApkTimeout_ = input.readInt32();
                break;
              }
              case 32: {

                installAsTestService_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            commandLineParameter_ = commandLineParameter_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_InstallOption_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_InstallOption_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.class, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.Builder.class);
      }

      public static final int COMMAND_LINE_PARAMETER_FIELD_NUMBER = 1;
      private com.google.protobuf.LazyStringList commandLineParameter_;
      /**
       * <pre>
       * A command line parameter to be passed into "adb install" command.
       * </pre>
       *
       * <code>repeated string command_line_parameter = 1;</code>
       * @return A list containing the commandLineParameter.
       */
      public com.google.protobuf.ProtocolStringList
          getCommandLineParameterList() {
        return commandLineParameter_;
      }
      /**
       * <pre>
       * A command line parameter to be passed into "adb install" command.
       * </pre>
       *
       * <code>repeated string command_line_parameter = 1;</code>
       * @return The count of commandLineParameter.
       */
      public int getCommandLineParameterCount() {
        return commandLineParameter_.size();
      }
      /**
       * <pre>
       * A command line parameter to be passed into "adb install" command.
       * </pre>
       *
       * <code>repeated string command_line_parameter = 1;</code>
       * @param index The index of the element to return.
       * @return The commandLineParameter at the given index.
       */
      public java.lang.String getCommandLineParameter(int index) {
        return commandLineParameter_.get(index);
      }
      /**
       * <pre>
       * A command line parameter to be passed into "adb install" command.
       * </pre>
       *
       * <code>repeated string command_line_parameter = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the commandLineParameter at the given index.
       */
      public com.google.protobuf.ByteString
          getCommandLineParameterBytes(int index) {
        return commandLineParameter_.getByteString(index);
      }

      public static final int INSTALL_AS_SPLIT_APK_FIELD_NUMBER = 2;
      private boolean installAsSplitApk_;
      /**
       * <pre>
       * If true, APK(s) in apk_paths will be installed as split APKs
       * </pre>
       *
       * <code>bool install_as_split_apk = 2;</code>
       * @return The installAsSplitApk.
       */
      @java.lang.Override
      public boolean getInstallAsSplitApk() {
        return installAsSplitApk_;
      }

      public static final int INSTALL_APK_TIMEOUT_FIELD_NUMBER = 3;
      private int installApkTimeout_;
      /**
       * <pre>
       * Optional timeout for installing test APKs
       * 0 value means that UTP uses the default install timeout.
       * Negative value will treated the same as 0.
       * Unit is in seconds
       * </pre>
       *
       * <code>int32 install_apk_timeout = 3;</code>
       * @return The installApkTimeout.
       */
      @java.lang.Override
      public int getInstallApkTimeout() {
        return installApkTimeout_;
      }

      public static final int INSTALL_AS_TEST_SERVICE_FIELD_NUMBER = 4;
      private boolean installAsTestService_;
      /**
       * <pre>
       * If true, install APKs as test service
       * Install as test service will need some additional flags depending on API level
       * </pre>
       *
       * <code>bool install_as_test_service = 4;</code>
       * @return The installAsTestService.
       */
      @java.lang.Override
      public boolean getInstallAsTestService() {
        return installAsTestService_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < commandLineParameter_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, commandLineParameter_.getRaw(i));
        }
        if (installAsSplitApk_ != false) {
          output.writeBool(2, installAsSplitApk_);
        }
        if (installApkTimeout_ != 0) {
          output.writeInt32(3, installApkTimeout_);
        }
        if (installAsTestService_ != false) {
          output.writeBool(4, installAsTestService_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < commandLineParameter_.size(); i++) {
            dataSize += computeStringSizeNoTag(commandLineParameter_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getCommandLineParameterList().size();
        }
        if (installAsSplitApk_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, installAsSplitApk_);
        }
        if (installApkTimeout_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, installApkTimeout_);
        }
        if (installAsTestService_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, installAsTestService_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption)) {
          return super.equals(obj);
        }
        com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption other = (com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption) obj;

        if (!getCommandLineParameterList()
            .equals(other.getCommandLineParameterList())) return false;
        if (getInstallAsSplitApk()
            != other.getInstallAsSplitApk()) return false;
        if (getInstallApkTimeout()
            != other.getInstallApkTimeout()) return false;
        if (getInstallAsTestService()
            != other.getInstallAsTestService()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getCommandLineParameterCount() > 0) {
          hash = (37 * hash) + COMMAND_LINE_PARAMETER_FIELD_NUMBER;
          hash = (53 * hash) + getCommandLineParameterList().hashCode();
        }
        hash = (37 * hash) + INSTALL_AS_SPLIT_APK_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getInstallAsSplitApk());
        hash = (37 * hash) + INSTALL_APK_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getInstallApkTimeout();
        hash = (37 * hash) + INSTALL_AS_TEST_SERVICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getInstallAsTestService());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Provides information about install option.
       * </pre>
       *
       * Protobuf type {@code com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption)
          com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOptionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_InstallOption_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_InstallOption_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.class, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.Builder.class);
        }

        // Construct using com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          commandLineParameter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          installAsSplitApk_ = false;

          installApkTimeout_ = 0;

          installAsTestService_ = false;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_InstallOption_descriptor;
        }

        @java.lang.Override
        public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption getDefaultInstanceForType() {
          return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.getDefaultInstance();
        }

        @java.lang.Override
        public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption build() {
          com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption buildPartial() {
          com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption result = new com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) != 0)) {
            commandLineParameter_ = commandLineParameter_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.commandLineParameter_ = commandLineParameter_;
          result.installAsSplitApk_ = installAsSplitApk_;
          result.installApkTimeout_ = installApkTimeout_;
          result.installAsTestService_ = installAsTestService_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption) {
            return mergeFrom((com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption other) {
          if (other == com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.getDefaultInstance()) return this;
          if (!other.commandLineParameter_.isEmpty()) {
            if (commandLineParameter_.isEmpty()) {
              commandLineParameter_ = other.commandLineParameter_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCommandLineParameterIsMutable();
              commandLineParameter_.addAll(other.commandLineParameter_);
            }
            onChanged();
          }
          if (other.getInstallAsSplitApk() != false) {
            setInstallAsSplitApk(other.getInstallAsSplitApk());
          }
          if (other.getInstallApkTimeout() != 0) {
            setInstallApkTimeout(other.getInstallApkTimeout());
          }
          if (other.getInstallAsTestService() != false) {
            setInstallAsTestService(other.getInstallAsTestService());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.LazyStringList commandLineParameter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureCommandLineParameterIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            commandLineParameter_ = new com.google.protobuf.LazyStringArrayList(commandLineParameter_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <pre>
         * A command line parameter to be passed into "adb install" command.
         * </pre>
         *
         * <code>repeated string command_line_parameter = 1;</code>
         * @return A list containing the commandLineParameter.
         */
        public com.google.protobuf.ProtocolStringList
            getCommandLineParameterList() {
          return commandLineParameter_.getUnmodifiableView();
        }
        /**
         * <pre>
         * A command line parameter to be passed into "adb install" command.
         * </pre>
         *
         * <code>repeated string command_line_parameter = 1;</code>
         * @return The count of commandLineParameter.
         */
        public int getCommandLineParameterCount() {
          return commandLineParameter_.size();
        }
        /**
         * <pre>
         * A command line parameter to be passed into "adb install" command.
         * </pre>
         *
         * <code>repeated string command_line_parameter = 1;</code>
         * @param index The index of the element to return.
         * @return The commandLineParameter at the given index.
         */
        public java.lang.String getCommandLineParameter(int index) {
          return commandLineParameter_.get(index);
        }
        /**
         * <pre>
         * A command line parameter to be passed into "adb install" command.
         * </pre>
         *
         * <code>repeated string command_line_parameter = 1;</code>
         * @param index The index of the value to return.
         * @return The bytes of the commandLineParameter at the given index.
         */
        public com.google.protobuf.ByteString
            getCommandLineParameterBytes(int index) {
          return commandLineParameter_.getByteString(index);
        }
        /**
         * <pre>
         * A command line parameter to be passed into "adb install" command.
         * </pre>
         *
         * <code>repeated string command_line_parameter = 1;</code>
         * @param index The index to set the value at.
         * @param value The commandLineParameter to set.
         * @return This builder for chaining.
         */
        public Builder setCommandLineParameter(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureCommandLineParameterIsMutable();
          commandLineParameter_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A command line parameter to be passed into "adb install" command.
         * </pre>
         *
         * <code>repeated string command_line_parameter = 1;</code>
         * @param value The commandLineParameter to add.
         * @return This builder for chaining.
         */
        public Builder addCommandLineParameter(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureCommandLineParameterIsMutable();
          commandLineParameter_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A command line parameter to be passed into "adb install" command.
         * </pre>
         *
         * <code>repeated string command_line_parameter = 1;</code>
         * @param values The commandLineParameter to add.
         * @return This builder for chaining.
         */
        public Builder addAllCommandLineParameter(
            java.lang.Iterable<java.lang.String> values) {
          ensureCommandLineParameterIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, commandLineParameter_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A command line parameter to be passed into "adb install" command.
         * </pre>
         *
         * <code>repeated string command_line_parameter = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearCommandLineParameter() {
          commandLineParameter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A command line parameter to be passed into "adb install" command.
         * </pre>
         *
         * <code>repeated string command_line_parameter = 1;</code>
         * @param value The bytes of the commandLineParameter to add.
         * @return This builder for chaining.
         */
        public Builder addCommandLineParameterBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureCommandLineParameterIsMutable();
          commandLineParameter_.add(value);
          onChanged();
          return this;
        }

        private boolean installAsSplitApk_ ;
        /**
         * <pre>
         * If true, APK(s) in apk_paths will be installed as split APKs
         * </pre>
         *
         * <code>bool install_as_split_apk = 2;</code>
         * @return The installAsSplitApk.
         */
        @java.lang.Override
        public boolean getInstallAsSplitApk() {
          return installAsSplitApk_;
        }
        /**
         * <pre>
         * If true, APK(s) in apk_paths will be installed as split APKs
         * </pre>
         *
         * <code>bool install_as_split_apk = 2;</code>
         * @param value The installAsSplitApk to set.
         * @return This builder for chaining.
         */
        public Builder setInstallAsSplitApk(boolean value) {

          installAsSplitApk_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If true, APK(s) in apk_paths will be installed as split APKs
         * </pre>
         *
         * <code>bool install_as_split_apk = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearInstallAsSplitApk() {

          installAsSplitApk_ = false;
          onChanged();
          return this;
        }

        private int installApkTimeout_ ;
        /**
         * <pre>
         * Optional timeout for installing test APKs
         * 0 value means that UTP uses the default install timeout.
         * Negative value will treated the same as 0.
         * Unit is in seconds
         * </pre>
         *
         * <code>int32 install_apk_timeout = 3;</code>
         * @return The installApkTimeout.
         */
        @java.lang.Override
        public int getInstallApkTimeout() {
          return installApkTimeout_;
        }
        /**
         * <pre>
         * Optional timeout for installing test APKs
         * 0 value means that UTP uses the default install timeout.
         * Negative value will treated the same as 0.
         * Unit is in seconds
         * </pre>
         *
         * <code>int32 install_apk_timeout = 3;</code>
         * @param value The installApkTimeout to set.
         * @return This builder for chaining.
         */
        public Builder setInstallApkTimeout(int value) {

          installApkTimeout_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Optional timeout for installing test APKs
         * 0 value means that UTP uses the default install timeout.
         * Negative value will treated the same as 0.
         * Unit is in seconds
         * </pre>
         *
         * <code>int32 install_apk_timeout = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearInstallApkTimeout() {

          installApkTimeout_ = 0;
          onChanged();
          return this;
        }

        private boolean installAsTestService_ ;
        /**
         * <pre>
         * If true, install APKs as test service
         * Install as test service will need some additional flags depending on API level
         * </pre>
         *
         * <code>bool install_as_test_service = 4;</code>
         * @return The installAsTestService.
         */
        @java.lang.Override
        public boolean getInstallAsTestService() {
          return installAsTestService_;
        }
        /**
         * <pre>
         * If true, install APKs as test service
         * Install as test service will need some additional flags depending on API level
         * </pre>
         *
         * <code>bool install_as_test_service = 4;</code>
         * @param value The installAsTestService to set.
         * @return This builder for chaining.
         */
        public Builder setInstallAsTestService(boolean value) {

          installAsTestService_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If true, install APKs as test service
         * Install as test service will need some additional flags depending on API level
         * </pre>
         *
         * <code>bool install_as_test_service = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearInstallAsTestService() {

          installAsTestService_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption)
      }

      // @@protoc_insertion_point(class_scope:com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption)
      private static final com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption();
      }

      public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<InstallOption>
          PARSER = new com.google.protobuf.AbstractParser<InstallOption>() {
        @java.lang.Override
        public InstallOption parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new InstallOption(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<InstallOption> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<InstallOption> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int APK_PATHS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList apkPaths_;
    /**
     * <pre>
     * Paths to all APK(s) to install.
     * </pre>
     *
     * <code>repeated string apk_paths = 1;</code>
     * @return A list containing the apkPaths.
     */
    public com.google.protobuf.ProtocolStringList
        getApkPathsList() {
      return apkPaths_;
    }
    /**
     * <pre>
     * Paths to all APK(s) to install.
     * </pre>
     *
     * <code>repeated string apk_paths = 1;</code>
     * @return The count of apkPaths.
     */
    public int getApkPathsCount() {
      return apkPaths_.size();
    }
    /**
     * <pre>
     * Paths to all APK(s) to install.
     * </pre>
     *
     * <code>repeated string apk_paths = 1;</code>
     * @param index The index of the element to return.
     * @return The apkPaths at the given index.
     */
    public java.lang.String getApkPaths(int index) {
      return apkPaths_.get(index);
    }
    /**
     * <pre>
     * Paths to all APK(s) to install.
     * </pre>
     *
     * <code>repeated string apk_paths = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the apkPaths at the given index.
     */
    public com.google.protobuf.ByteString
        getApkPathsBytes(int index) {
      return apkPaths_.getByteString(index);
    }

    public static final int INSTALL_OPTIONS_FIELD_NUMBER = 2;
    private com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption installOptions_;
    /**
     * <pre>
     * The APK package manager install options to be used to install the APK.
     * </pre>
     *
     * <code>.com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption install_options = 2;</code>
     * @return Whether the installOptions field is set.
     */
    @java.lang.Override
    public boolean hasInstallOptions() {
      return installOptions_ != null;
    }
    /**
     * <pre>
     * The APK package manager install options to be used to install the APK.
     * </pre>
     *
     * <code>.com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption install_options = 2;</code>
     * @return The installOptions.
     */
    @java.lang.Override
    public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption getInstallOptions() {
      return installOptions_ == null ? com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.getDefaultInstance() : installOptions_;
    }
    /**
     * <pre>
     * The APK package manager install options to be used to install the APK.
     * </pre>
     *
     * <code>.com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption install_options = 2;</code>
     */
    @java.lang.Override
    public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOptionOrBuilder getInstallOptionsOrBuilder() {
      return getInstallOptions();
    }

    public static final int UNINSTALL_AFTER_TEST_FIELD_NUMBER = 3;
    private boolean uninstallAfterTest_;
    /**
     * <pre>
     * If true, the installed APK(s) are uninstalled after test execution.
     * </pre>
     *
     * <code>bool uninstall_after_test = 3;</code>
     * @return The uninstallAfterTest.
     */
    @java.lang.Override
    public boolean getUninstallAfterTest() {
      return uninstallAfterTest_;
    }

    public static final int APKS_PACKAGE_NAME_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList apksPackageName_;
    /**
     * <pre>
     * Package name of APKs installed during test
     * </pre>
     *
     * <code>repeated string apks_package_name = 4;</code>
     * @return A list containing the apksPackageName.
     */
    public com.google.protobuf.ProtocolStringList
        getApksPackageNameList() {
      return apksPackageName_;
    }
    /**
     * <pre>
     * Package name of APKs installed during test
     * </pre>
     *
     * <code>repeated string apks_package_name = 4;</code>
     * @return The count of apksPackageName.
     */
    public int getApksPackageNameCount() {
      return apksPackageName_.size();
    }
    /**
     * <pre>
     * Package name of APKs installed during test
     * </pre>
     *
     * <code>repeated string apks_package_name = 4;</code>
     * @param index The index of the element to return.
     * @return The apksPackageName at the given index.
     */
    public java.lang.String getApksPackageName(int index) {
      return apksPackageName_.get(index);
    }
    /**
     * <pre>
     * Package name of APKs installed during test
     * </pre>
     *
     * <code>repeated string apks_package_name = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the apksPackageName at the given index.
     */
    public com.google.protobuf.ByteString
        getApksPackageNameBytes(int index) {
      return apksPackageName_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < apkPaths_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, apkPaths_.getRaw(i));
      }
      if (installOptions_ != null) {
        output.writeMessage(2, getInstallOptions());
      }
      if (uninstallAfterTest_ != false) {
        output.writeBool(3, uninstallAfterTest_);
      }
      for (int i = 0; i < apksPackageName_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, apksPackageName_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < apkPaths_.size(); i++) {
          dataSize += computeStringSizeNoTag(apkPaths_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getApkPathsList().size();
      }
      if (installOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getInstallOptions());
      }
      if (uninstallAfterTest_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, uninstallAfterTest_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < apksPackageName_.size(); i++) {
          dataSize += computeStringSizeNoTag(apksPackageName_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getApksPackageNameList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk)) {
        return super.equals(obj);
      }
      com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk other = (com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk) obj;

      if (!getApkPathsList()
          .equals(other.getApkPathsList())) return false;
      if (hasInstallOptions() != other.hasInstallOptions()) return false;
      if (hasInstallOptions()) {
        if (!getInstallOptions()
            .equals(other.getInstallOptions())) return false;
      }
      if (getUninstallAfterTest()
          != other.getUninstallAfterTest()) return false;
      if (!getApksPackageNameList()
          .equals(other.getApksPackageNameList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getApkPathsCount() > 0) {
        hash = (37 * hash) + APK_PATHS_FIELD_NUMBER;
        hash = (53 * hash) + getApkPathsList().hashCode();
      }
      if (hasInstallOptions()) {
        hash = (37 * hash) + INSTALL_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getInstallOptions().hashCode();
      }
      hash = (37 * hash) + UNINSTALL_AFTER_TEST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUninstallAfterTest());
      if (getApksPackageNameCount() > 0) {
        hash = (37 * hash) + APKS_PACKAGE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getApksPackageNameList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Provides information for an APK to be installed.
     * </pre>
     *
     * Protobuf type {@code com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk)
        com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.class, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.Builder.class);
      }

      // Construct using com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        apkPaths_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (installOptionsBuilder_ == null) {
          installOptions_ = null;
        } else {
          installOptions_ = null;
          installOptionsBuilder_ = null;
        }
        uninstallAfterTest_ = false;

        apksPackageName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_descriptor;
      }

      @java.lang.Override
      public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk getDefaultInstanceForType() {
        return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.getDefaultInstance();
      }

      @java.lang.Override
      public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk build() {
        com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk buildPartial() {
        com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk result = new com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          apkPaths_ = apkPaths_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.apkPaths_ = apkPaths_;
        if (installOptionsBuilder_ == null) {
          result.installOptions_ = installOptions_;
        } else {
          result.installOptions_ = installOptionsBuilder_.build();
        }
        result.uninstallAfterTest_ = uninstallAfterTest_;
        if (((bitField0_ & 0x00000002) != 0)) {
          apksPackageName_ = apksPackageName_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.apksPackageName_ = apksPackageName_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk) {
          return mergeFrom((com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk other) {
        if (other == com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.getDefaultInstance()) return this;
        if (!other.apkPaths_.isEmpty()) {
          if (apkPaths_.isEmpty()) {
            apkPaths_ = other.apkPaths_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureApkPathsIsMutable();
            apkPaths_.addAll(other.apkPaths_);
          }
          onChanged();
        }
        if (other.hasInstallOptions()) {
          mergeInstallOptions(other.getInstallOptions());
        }
        if (other.getUninstallAfterTest() != false) {
          setUninstallAfterTest(other.getUninstallAfterTest());
        }
        if (!other.apksPackageName_.isEmpty()) {
          if (apksPackageName_.isEmpty()) {
            apksPackageName_ = other.apksPackageName_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureApksPackageNameIsMutable();
            apksPackageName_.addAll(other.apksPackageName_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList apkPaths_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureApkPathsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          apkPaths_ = new com.google.protobuf.LazyStringArrayList(apkPaths_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Paths to all APK(s) to install.
       * </pre>
       *
       * <code>repeated string apk_paths = 1;</code>
       * @return A list containing the apkPaths.
       */
      public com.google.protobuf.ProtocolStringList
          getApkPathsList() {
        return apkPaths_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Paths to all APK(s) to install.
       * </pre>
       *
       * <code>repeated string apk_paths = 1;</code>
       * @return The count of apkPaths.
       */
      public int getApkPathsCount() {
        return apkPaths_.size();
      }
      /**
       * <pre>
       * Paths to all APK(s) to install.
       * </pre>
       *
       * <code>repeated string apk_paths = 1;</code>
       * @param index The index of the element to return.
       * @return The apkPaths at the given index.
       */
      public java.lang.String getApkPaths(int index) {
        return apkPaths_.get(index);
      }
      /**
       * <pre>
       * Paths to all APK(s) to install.
       * </pre>
       *
       * <code>repeated string apk_paths = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the apkPaths at the given index.
       */
      public com.google.protobuf.ByteString
          getApkPathsBytes(int index) {
        return apkPaths_.getByteString(index);
      }
      /**
       * <pre>
       * Paths to all APK(s) to install.
       * </pre>
       *
       * <code>repeated string apk_paths = 1;</code>
       * @param index The index to set the value at.
       * @param value The apkPaths to set.
       * @return This builder for chaining.
       */
      public Builder setApkPaths(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureApkPathsIsMutable();
        apkPaths_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Paths to all APK(s) to install.
       * </pre>
       *
       * <code>repeated string apk_paths = 1;</code>
       * @param value The apkPaths to add.
       * @return This builder for chaining.
       */
      public Builder addApkPaths(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureApkPathsIsMutable();
        apkPaths_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Paths to all APK(s) to install.
       * </pre>
       *
       * <code>repeated string apk_paths = 1;</code>
       * @param values The apkPaths to add.
       * @return This builder for chaining.
       */
      public Builder addAllApkPaths(
          java.lang.Iterable<java.lang.String> values) {
        ensureApkPathsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, apkPaths_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Paths to all APK(s) to install.
       * </pre>
       *
       * <code>repeated string apk_paths = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearApkPaths() {
        apkPaths_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Paths to all APK(s) to install.
       * </pre>
       *
       * <code>repeated string apk_paths = 1;</code>
       * @param value The bytes of the apkPaths to add.
       * @return This builder for chaining.
       */
      public Builder addApkPathsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureApkPathsIsMutable();
        apkPaths_.add(value);
        onChanged();
        return this;
      }

      private com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption installOptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.Builder, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOptionOrBuilder> installOptionsBuilder_;
      /**
       * <pre>
       * The APK package manager install options to be used to install the APK.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption install_options = 2;</code>
       * @return Whether the installOptions field is set.
       */
      public boolean hasInstallOptions() {
        return installOptionsBuilder_ != null || installOptions_ != null;
      }
      /**
       * <pre>
       * The APK package manager install options to be used to install the APK.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption install_options = 2;</code>
       * @return The installOptions.
       */
      public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption getInstallOptions() {
        if (installOptionsBuilder_ == null) {
          return installOptions_ == null ? com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.getDefaultInstance() : installOptions_;
        } else {
          return installOptionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The APK package manager install options to be used to install the APK.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption install_options = 2;</code>
       */
      public Builder setInstallOptions(com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption value) {
        if (installOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          installOptions_ = value;
          onChanged();
        } else {
          installOptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The APK package manager install options to be used to install the APK.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption install_options = 2;</code>
       */
      public Builder setInstallOptions(
          com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.Builder builderForValue) {
        if (installOptionsBuilder_ == null) {
          installOptions_ = builderForValue.build();
          onChanged();
        } else {
          installOptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The APK package manager install options to be used to install the APK.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption install_options = 2;</code>
       */
      public Builder mergeInstallOptions(com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption value) {
        if (installOptionsBuilder_ == null) {
          if (installOptions_ != null) {
            installOptions_ =
              com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.newBuilder(installOptions_).mergeFrom(value).buildPartial();
          } else {
            installOptions_ = value;
          }
          onChanged();
        } else {
          installOptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The APK package manager install options to be used to install the APK.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption install_options = 2;</code>
       */
      public Builder clearInstallOptions() {
        if (installOptionsBuilder_ == null) {
          installOptions_ = null;
          onChanged();
        } else {
          installOptions_ = null;
          installOptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The APK package manager install options to be used to install the APK.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption install_options = 2;</code>
       */
      public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.Builder getInstallOptionsBuilder() {

        onChanged();
        return getInstallOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The APK package manager install options to be used to install the APK.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption install_options = 2;</code>
       */
      public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOptionOrBuilder getInstallOptionsOrBuilder() {
        if (installOptionsBuilder_ != null) {
          return installOptionsBuilder_.getMessageOrBuilder();
        } else {
          return installOptions_ == null ?
              com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.getDefaultInstance() : installOptions_;
        }
      }
      /**
       * <pre>
       * The APK package manager install options to be used to install the APK.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk.InstallOption install_options = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.Builder, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOptionOrBuilder>
          getInstallOptionsFieldBuilder() {
        if (installOptionsBuilder_ == null) {
          installOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOption.Builder, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.InstallOptionOrBuilder>(
                  getInstallOptions(),
                  getParentForChildren(),
                  isClean());
          installOptions_ = null;
        }
        return installOptionsBuilder_;
      }

      private boolean uninstallAfterTest_ ;
      /**
       * <pre>
       * If true, the installed APK(s) are uninstalled after test execution.
       * </pre>
       *
       * <code>bool uninstall_after_test = 3;</code>
       * @return The uninstallAfterTest.
       */
      @java.lang.Override
      public boolean getUninstallAfterTest() {
        return uninstallAfterTest_;
      }
      /**
       * <pre>
       * If true, the installed APK(s) are uninstalled after test execution.
       * </pre>
       *
       * <code>bool uninstall_after_test = 3;</code>
       * @param value The uninstallAfterTest to set.
       * @return This builder for chaining.
       */
      public Builder setUninstallAfterTest(boolean value) {

        uninstallAfterTest_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, the installed APK(s) are uninstalled after test execution.
       * </pre>
       *
       * <code>bool uninstall_after_test = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUninstallAfterTest() {

        uninstallAfterTest_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList apksPackageName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureApksPackageNameIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          apksPackageName_ = new com.google.protobuf.LazyStringArrayList(apksPackageName_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * Package name of APKs installed during test
       * </pre>
       *
       * <code>repeated string apks_package_name = 4;</code>
       * @return A list containing the apksPackageName.
       */
      public com.google.protobuf.ProtocolStringList
          getApksPackageNameList() {
        return apksPackageName_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Package name of APKs installed during test
       * </pre>
       *
       * <code>repeated string apks_package_name = 4;</code>
       * @return The count of apksPackageName.
       */
      public int getApksPackageNameCount() {
        return apksPackageName_.size();
      }
      /**
       * <pre>
       * Package name of APKs installed during test
       * </pre>
       *
       * <code>repeated string apks_package_name = 4;</code>
       * @param index The index of the element to return.
       * @return The apksPackageName at the given index.
       */
      public java.lang.String getApksPackageName(int index) {
        return apksPackageName_.get(index);
      }
      /**
       * <pre>
       * Package name of APKs installed during test
       * </pre>
       *
       * <code>repeated string apks_package_name = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the apksPackageName at the given index.
       */
      public com.google.protobuf.ByteString
          getApksPackageNameBytes(int index) {
        return apksPackageName_.getByteString(index);
      }
      /**
       * <pre>
       * Package name of APKs installed during test
       * </pre>
       *
       * <code>repeated string apks_package_name = 4;</code>
       * @param index The index to set the value at.
       * @param value The apksPackageName to set.
       * @return This builder for chaining.
       */
      public Builder setApksPackageName(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureApksPackageNameIsMutable();
        apksPackageName_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Package name of APKs installed during test
       * </pre>
       *
       * <code>repeated string apks_package_name = 4;</code>
       * @param value The apksPackageName to add.
       * @return This builder for chaining.
       */
      public Builder addApksPackageName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureApksPackageNameIsMutable();
        apksPackageName_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Package name of APKs installed during test
       * </pre>
       *
       * <code>repeated string apks_package_name = 4;</code>
       * @param values The apksPackageName to add.
       * @return This builder for chaining.
       */
      public Builder addAllApksPackageName(
          java.lang.Iterable<java.lang.String> values) {
        ensureApksPackageNameIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, apksPackageName_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Package name of APKs installed during test
       * </pre>
       *
       * <code>repeated string apks_package_name = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearApksPackageName() {
        apksPackageName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Package name of APKs installed during test
       * </pre>
       *
       * <code>repeated string apks_package_name = 4;</code>
       * @param value The bytes of the apksPackageName to add.
       * @return This builder for chaining.
       */
      public Builder addApksPackageNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureApksPackageNameIsMutable();
        apksPackageName_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk)
    }

    // @@protoc_insertion_point(class_scope:com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk)
    private static final com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk();
    }

    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InstallableApk>
        PARSER = new com.google.protobuf.AbstractParser<InstallableApk>() {
      @java.lang.Override
      public InstallableApk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InstallableApk(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InstallableApk> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InstallableApk> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AndroidApkInstallerConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
     */
    java.util.List<com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk>
        getApksToInstallList();
    /**
     * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
     */
    com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk getApksToInstall(int index);
    /**
     * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
     */
    int getApksToInstallCount();
    /**
     * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
     */
    java.util.List<? extends com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApkOrBuilder>
        getApksToInstallOrBuilderList();
    /**
     * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
     */
    com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApkOrBuilder getApksToInstallOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfig}
   */
  public static final class AndroidApkInstallerConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfig)
      AndroidApkInstallerConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AndroidApkInstallerConfig.newBuilder() to construct.
    private AndroidApkInstallerConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AndroidApkInstallerConfig() {
      apksToInstall_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AndroidApkInstallerConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AndroidApkInstallerConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                apksToInstall_ = new java.util.ArrayList<com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk>();
                mutable_bitField0_ |= 0x00000001;
              }
              apksToInstall_.add(
                  input.readMessage(com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          apksToInstall_ = java.util.Collections.unmodifiableList(apksToInstall_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_AndroidApkInstallerConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_AndroidApkInstallerConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig.class, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig.Builder.class);
    }

    public static final int APKS_TO_INSTALL_FIELD_NUMBER = 1;
    private java.util.List<com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk> apksToInstall_;
    /**
     * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk> getApksToInstallList() {
      return apksToInstall_;
    }
    /**
     * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApkOrBuilder>
        getApksToInstallOrBuilderList() {
      return apksToInstall_;
    }
    /**
     * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
     */
    @java.lang.Override
    public int getApksToInstallCount() {
      return apksToInstall_.size();
    }
    /**
     * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
     */
    @java.lang.Override
    public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk getApksToInstall(int index) {
      return apksToInstall_.get(index);
    }
    /**
     * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
     */
    @java.lang.Override
    public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApkOrBuilder getApksToInstallOrBuilder(
        int index) {
      return apksToInstall_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < apksToInstall_.size(); i++) {
        output.writeMessage(1, apksToInstall_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < apksToInstall_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, apksToInstall_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig)) {
        return super.equals(obj);
      }
      com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig other = (com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig) obj;

      if (!getApksToInstallList()
          .equals(other.getApksToInstallList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getApksToInstallCount() > 0) {
        hash = (37 * hash) + APKS_TO_INSTALL_FIELD_NUMBER;
        hash = (53 * hash) + getApksToInstallList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfig)
        com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_AndroidApkInstallerConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_AndroidApkInstallerConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig.class, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig.Builder.class);
      }

      // Construct using com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getApksToInstallFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (apksToInstallBuilder_ == null) {
          apksToInstall_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          apksToInstallBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_AndroidApkInstallerConfig_descriptor;
      }

      @java.lang.Override
      public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig getDefaultInstanceForType() {
        return com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig build() {
        com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig buildPartial() {
        com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig result = new com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig(this);
        int from_bitField0_ = bitField0_;
        if (apksToInstallBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            apksToInstall_ = java.util.Collections.unmodifiableList(apksToInstall_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.apksToInstall_ = apksToInstall_;
        } else {
          result.apksToInstall_ = apksToInstallBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig) {
          return mergeFrom((com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig other) {
        if (other == com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig.getDefaultInstance()) return this;
        if (apksToInstallBuilder_ == null) {
          if (!other.apksToInstall_.isEmpty()) {
            if (apksToInstall_.isEmpty()) {
              apksToInstall_ = other.apksToInstall_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureApksToInstallIsMutable();
              apksToInstall_.addAll(other.apksToInstall_);
            }
            onChanged();
          }
        } else {
          if (!other.apksToInstall_.isEmpty()) {
            if (apksToInstallBuilder_.isEmpty()) {
              apksToInstallBuilder_.dispose();
              apksToInstallBuilder_ = null;
              apksToInstall_ = other.apksToInstall_;
              bitField0_ = (bitField0_ & ~0x00000001);
              apksToInstallBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getApksToInstallFieldBuilder() : null;
            } else {
              apksToInstallBuilder_.addAllMessages(other.apksToInstall_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk> apksToInstall_ =
        java.util.Collections.emptyList();
      private void ensureApksToInstallIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          apksToInstall_ = new java.util.ArrayList<com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk>(apksToInstall_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.Builder, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApkOrBuilder> apksToInstallBuilder_;

      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public java.util.List<com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk> getApksToInstallList() {
        if (apksToInstallBuilder_ == null) {
          return java.util.Collections.unmodifiableList(apksToInstall_);
        } else {
          return apksToInstallBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public int getApksToInstallCount() {
        if (apksToInstallBuilder_ == null) {
          return apksToInstall_.size();
        } else {
          return apksToInstallBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk getApksToInstall(int index) {
        if (apksToInstallBuilder_ == null) {
          return apksToInstall_.get(index);
        } else {
          return apksToInstallBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public Builder setApksToInstall(
          int index, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk value) {
        if (apksToInstallBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureApksToInstallIsMutable();
          apksToInstall_.set(index, value);
          onChanged();
        } else {
          apksToInstallBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public Builder setApksToInstall(
          int index, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.Builder builderForValue) {
        if (apksToInstallBuilder_ == null) {
          ensureApksToInstallIsMutable();
          apksToInstall_.set(index, builderForValue.build());
          onChanged();
        } else {
          apksToInstallBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public Builder addApksToInstall(com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk value) {
        if (apksToInstallBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureApksToInstallIsMutable();
          apksToInstall_.add(value);
          onChanged();
        } else {
          apksToInstallBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public Builder addApksToInstall(
          int index, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk value) {
        if (apksToInstallBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureApksToInstallIsMutable();
          apksToInstall_.add(index, value);
          onChanged();
        } else {
          apksToInstallBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public Builder addApksToInstall(
          com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.Builder builderForValue) {
        if (apksToInstallBuilder_ == null) {
          ensureApksToInstallIsMutable();
          apksToInstall_.add(builderForValue.build());
          onChanged();
        } else {
          apksToInstallBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public Builder addApksToInstall(
          int index, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.Builder builderForValue) {
        if (apksToInstallBuilder_ == null) {
          ensureApksToInstallIsMutable();
          apksToInstall_.add(index, builderForValue.build());
          onChanged();
        } else {
          apksToInstallBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public Builder addAllApksToInstall(
          java.lang.Iterable<? extends com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk> values) {
        if (apksToInstallBuilder_ == null) {
          ensureApksToInstallIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, apksToInstall_);
          onChanged();
        } else {
          apksToInstallBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public Builder clearApksToInstall() {
        if (apksToInstallBuilder_ == null) {
          apksToInstall_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          apksToInstallBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public Builder removeApksToInstall(int index) {
        if (apksToInstallBuilder_ == null) {
          ensureApksToInstallIsMutable();
          apksToInstall_.remove(index);
          onChanged();
        } else {
          apksToInstallBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.Builder getApksToInstallBuilder(
          int index) {
        return getApksToInstallFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApkOrBuilder getApksToInstallOrBuilder(
          int index) {
        if (apksToInstallBuilder_ == null) {
          return apksToInstall_.get(index);  } else {
          return apksToInstallBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public java.util.List<? extends com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApkOrBuilder>
           getApksToInstallOrBuilderList() {
        if (apksToInstallBuilder_ != null) {
          return apksToInstallBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(apksToInstall_);
        }
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.Builder addApksToInstallBuilder() {
        return getApksToInstallFieldBuilder().addBuilder(
            com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.getDefaultInstance());
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.Builder addApksToInstallBuilder(
          int index) {
        return getApksToInstallFieldBuilder().addBuilder(
            index, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.getDefaultInstance());
      }
      /**
       * <code>repeated .com.android.tools.utp.plugins.host.apkinstaller.proto.InstallableApk apks_to_install = 1;</code>
       */
      public java.util.List<com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.Builder>
           getApksToInstallBuilderList() {
        return getApksToInstallFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.Builder, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApkOrBuilder>
          getApksToInstallFieldBuilder() {
        if (apksToInstallBuilder_ == null) {
          apksToInstallBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApk.Builder, com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.InstallableApkOrBuilder>(
                  apksToInstall_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          apksToInstall_ = null;
        }
        return apksToInstallBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfig)
    }

    // @@protoc_insertion_point(class_scope:com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfig)
    private static final com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig();
    }

    public static com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AndroidApkInstallerConfig>
        PARSER = new com.google.protobuf.AbstractParser<AndroidApkInstallerConfig>() {
      @java.lang.Override
      public AndroidApkInstallerConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AndroidApkInstallerConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AndroidApkInstallerConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AndroidApkInstallerConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.android.tools.utp.plugins.host.apkinstaller.proto.AndroidApkInstallerConfigProto.AndroidApkInstallerConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_InstallOption_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_InstallOption_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_AndroidApkInstallerConfig_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_AndroidApkInstallerConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n1src/main/proto/android_apk_installer_c" +
      "onfig.proto\0225com.android.tools.utp.plugi" +
      "ns.host.apkinstaller.proto\"\330\002\n\016Installab" +
      "leApk\022\021\n\tapk_paths\030\001 \003(\t\022l\n\017install_opti" +
      "ons\030\002 \001(\0132S.com.android.tools.utp.plugin" +
      "s.host.apkinstaller.proto.InstallableApk" +
      ".InstallOption\022\034\n\024uninstall_after_test\030\003" +
      " \001(\010\022\031\n\021apks_package_name\030\004 \003(\t\032\213\001\n\rInst" +
      "allOption\022\036\n\026command_line_parameter\030\001 \003(" +
      "\t\022\034\n\024install_as_split_apk\030\002 \001(\010\022\033\n\023insta" +
      "ll_apk_timeout\030\003 \001(\005\022\037\n\027install_as_test_" +
      "service\030\004 \001(\010\"{\n\031AndroidApkInstallerConf" +
      "ig\022^\n\017apks_to_install\030\001 \003(\0132E.com.androi" +
      "d.tools.utp.plugins.host.apkinstaller.pr" +
      "oto.InstallableApkBW\n5com.android.tools." +
      "utp.plugins.host.apkinstaller.protoB\036And" +
      "roidApkInstallerConfigProtob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_descriptor,
        new java.lang.String[] { "ApkPaths", "InstallOptions", "UninstallAfterTest", "ApksPackageName", });
    internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_InstallOption_descriptor =
      internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_descriptor.getNestedTypes().get(0);
    internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_InstallOption_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_InstallableApk_InstallOption_descriptor,
        new java.lang.String[] { "CommandLineParameter", "InstallAsSplitApk", "InstallApkTimeout", "InstallAsTestService", });
    internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_AndroidApkInstallerConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_AndroidApkInstallerConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_android_tools_utp_plugins_host_apkinstaller_proto_AndroidApkInstallerConfig_descriptor,
        new java.lang.String[] { "ApksToInstall", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
