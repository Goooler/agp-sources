// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface DynamicLayoutInspectorAutoConnectInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.DynamicLayoutInspectorAutoConnectInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The result of the handsthake. Does the device support auto connect?
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo.HandshakeResult handshake_result = 1;</code>
   * @return Whether the handshakeResult field is set.
   */
  boolean hasHandshakeResult();
  /**
   * <pre>
   * The result of the handsthake. Does the device support auto connect?
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo.HandshakeResult handshake_result = 1;</code>
   * @return The handshakeResult.
   */
  com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo.HandshakeResult getHandshakeResult();

  /**
   * <pre>
   * If the handshake was initially SUPPORT_UNKNOWN, to what did it convert to?
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo.HandshakeUnknownConversion handshake_conversion = 2;</code>
   * @return Whether the handshakeConversion field is set.
   */
  boolean hasHandshakeConversion();
  /**
   * <pre>
   * If the handshake was initially SUPPORT_UNKNOWN, to what did it convert to?
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo.HandshakeUnknownConversion handshake_conversion = 2;</code>
   * @return The handshakeConversion.
   */
  com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo.HandshakeUnknownConversion getHandshakeConversion();

  /**
   * <pre>
   * Additional info about why the handshake_result is NOT_SUPPORTED
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo.AutoConnectReasonNotSupported reason_not_supported = 3;</code>
   * @return Whether the reasonNotSupported field is set.
   */
  boolean hasReasonNotSupported();
  /**
   * <pre>
   * Additional info about why the handshake_result is NOT_SUPPORTED
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo.AutoConnectReasonNotSupported reason_not_supported = 3;</code>
   * @return The reasonNotSupported.
   */
  com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo.AutoConnectReasonNotSupported getReasonNotSupported();
}
