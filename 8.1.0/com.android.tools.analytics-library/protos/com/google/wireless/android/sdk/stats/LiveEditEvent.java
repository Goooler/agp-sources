// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * Protobuf type {@code android_studio.LiveEditEvent}
 */
public final class LiveEditEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.LiveEditEvent)
    LiveEditEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LiveEditEvent.newBuilder() to construct.
  private LiveEditEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LiveEditEvent() {
    status_ = 0;
    mode_ = 0;
    projectId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LiveEditEvent();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private LiveEditEvent(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
            com.google.wireless.android.sdk.stats.LiveEditEvent.Status value = com.google.wireless.android.sdk.stats.LiveEditEvent.Status.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(1, rawValue);
            } else {
              bitField0_ |= 0x00000001;
              status_ = rawValue;
            }
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            hasNonCompose_ = input.readBool();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            compileDurationMs_ = input.readInt64();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            pushDurationMs_ = input.readInt64();
            break;
          }
          case 40: {
            int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
            com.google.wireless.android.sdk.stats.LiveEditEvent.Mode value = com.google.wireless.android.sdk.stats.LiveEditEvent.Mode.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(5, rawValue);
            } else {
              bitField0_ |= 0x00000010;
              mode_ = rawValue;
            }
            break;
          }
          case 50: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000020;
            projectId_ = bs;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LiveEditEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LiveEditEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.LiveEditEvent.class, com.google.wireless.android.sdk.stats.LiveEditEvent.Builder.class);
  }

  /**
   * Protobuf enum {@code android_studio.LiveEditEvent.Status}
   */
  public enum Status
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <pre>
     * LiveEdit push succeeded
     * </pre>
     *
     * <code>SUCCESS = 1;</code>
     */
    SUCCESS(1),
    /**
     * <pre>
     * LiveEdit push failed due to transport issues
     * </pre>
     *
     * <code>PUSH_FAILED = 2;</code>
     */
    PUSH_FAILED(2),
    /**
     * <pre>
     * LiveEdit failed because the user added a method
     * </pre>
     *
     * <code>UNSUPPORTED_ADDED_METHOD = 3;</code>
     */
    UNSUPPORTED_ADDED_METHOD(3),
    /**
     * <pre>
     * LiveEdit failed because the user removed a method
     * </pre>
     *
     * <code>UNSUPPORTED_REMOVED_METHOD = 4;</code>
     */
    UNSUPPORTED_REMOVED_METHOD(4),
    /**
     * <pre>
     * LiveEdit failed because the user added a class
     * </pre>
     *
     * <code>UNSUPPORTED_ADDED_CLASS = 5;</code>
     */
    UNSUPPORTED_ADDED_CLASS(5),
    /**
     * <pre>
     * LiveEdit failed because the user added a field
     * </pre>
     *
     * <code>UNSUPPORTED_ADDED_FIELD = 6;</code>
     */
    UNSUPPORTED_ADDED_FIELD(6),
    /**
     * <pre>
     * LiveEdit failed because the user removed a field
     * </pre>
     *
     * <code>UNSUPPORTED_REMOVED_FIELD = 7;</code>
     */
    UNSUPPORTED_REMOVED_FIELD(7),
    /**
     * <pre>
     * LiveEdit failed because of an error with inlining
     * </pre>
     *
     * <code>UNSUPPORTED_MODIFY_INLINE = 8;</code>
     */
    UNSUPPORTED_MODIFY_INLINE(8),
    /**
     * <pre>
     * LiveEdit failed because the user changed the class hierarchy
     * </pre>
     *
     * <code>UNSUPPORTED_MODIFY_INHERITANCE = 9;</code>
     */
    UNSUPPORTED_MODIFY_INHERITANCE(9),
    /**
     * <pre>
     * The following are from LiveEditUpdateException.Error
     * We DO NOT log this. If this shows up in metrics, we know we have a bug at
     * hand.
     * </pre>
     *
     * <code>ANALYSIS_ERROR = 10;</code>
     */
    ANALYSIS_ERROR(10),
    /**
     * <pre>
     * We DO NOT log this. If this shows up in metrics, we know we have a bug at
     * hand.
     * </pre>
     *
     * <code>COMPILATION_ERROR = 11;</code>
     */
    COMPILATION_ERROR(11),
    /**
     * <code>NON_KOTLIN = 12;</code>
     */
    NON_KOTLIN(12),
    /**
     * <code>NON_PRIVATE_INLINE_FUNCTION = 13;</code>
     */
    NON_PRIVATE_INLINE_FUNCTION(13),
    /**
     * <code>UNABLE_TO_INLINE = 14;</code>
     */
    UNABLE_TO_INLINE(14),
    /**
     * <code>UNABLE_TO_LOCATE_COMPOSE_GROUP = 15;</code>
     */
    UNABLE_TO_LOCATE_COMPOSE_GROUP(15),
    /**
     * <code>UNSUPPORTED_BUILD_SRC_CHANGE = 16;</code>
     */
    UNSUPPORTED_BUILD_SRC_CHANGE(16),
    /**
     * <code>UNSUPPORTED_SRC_CHANGE_RECOVERABLE = 17;</code>
     */
    UNSUPPORTED_SRC_CHANGE_RECOVERABLE(17),
    /**
     * <code>UNSUPPORTED_SRC_CHANGE_UNRECOVERABLE = 18;</code>
     */
    UNSUPPORTED_SRC_CHANGE_UNRECOVERABLE(18),
    /**
     * <code>UNSUPPORTED_TEST_SRC_CHANGE = 19;</code>
     */
    UNSUPPORTED_TEST_SRC_CHANGE(19),
    /**
     * <code>UNABLE_TO_DESUGAR = 20;</code>
     */
    UNABLE_TO_DESUGAR(20),
    /**
     * <code>INTERNAL_ERROR = 21;</code>
     */
    INTERNAL_ERROR(21),
    /**
     * <code>KNOWN_ISSUE = 22;</code>
     */
    KNOWN_ISSUE(22),
    /**
     * <pre>
     * Semantic unsafe operations
     * </pre>
     *
     * <code>PENDING_ERROR_IN_ANOTHER_FILE_AUTO_MODE = 23;</code>
     */
    PENDING_ERROR_IN_ANOTHER_FILE_AUTO_MODE(23),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * LiveEdit push succeeded
     * </pre>
     *
     * <code>SUCCESS = 1;</code>
     */
    public static final int SUCCESS_VALUE = 1;
    /**
     * <pre>
     * LiveEdit push failed due to transport issues
     * </pre>
     *
     * <code>PUSH_FAILED = 2;</code>
     */
    public static final int PUSH_FAILED_VALUE = 2;
    /**
     * <pre>
     * LiveEdit failed because the user added a method
     * </pre>
     *
     * <code>UNSUPPORTED_ADDED_METHOD = 3;</code>
     */
    public static final int UNSUPPORTED_ADDED_METHOD_VALUE = 3;
    /**
     * <pre>
     * LiveEdit failed because the user removed a method
     * </pre>
     *
     * <code>UNSUPPORTED_REMOVED_METHOD = 4;</code>
     */
    public static final int UNSUPPORTED_REMOVED_METHOD_VALUE = 4;
    /**
     * <pre>
     * LiveEdit failed because the user added a class
     * </pre>
     *
     * <code>UNSUPPORTED_ADDED_CLASS = 5;</code>
     */
    public static final int UNSUPPORTED_ADDED_CLASS_VALUE = 5;
    /**
     * <pre>
     * LiveEdit failed because the user added a field
     * </pre>
     *
     * <code>UNSUPPORTED_ADDED_FIELD = 6;</code>
     */
    public static final int UNSUPPORTED_ADDED_FIELD_VALUE = 6;
    /**
     * <pre>
     * LiveEdit failed because the user removed a field
     * </pre>
     *
     * <code>UNSUPPORTED_REMOVED_FIELD = 7;</code>
     */
    public static final int UNSUPPORTED_REMOVED_FIELD_VALUE = 7;
    /**
     * <pre>
     * LiveEdit failed because of an error with inlining
     * </pre>
     *
     * <code>UNSUPPORTED_MODIFY_INLINE = 8;</code>
     */
    public static final int UNSUPPORTED_MODIFY_INLINE_VALUE = 8;
    /**
     * <pre>
     * LiveEdit failed because the user changed the class hierarchy
     * </pre>
     *
     * <code>UNSUPPORTED_MODIFY_INHERITANCE = 9;</code>
     */
    public static final int UNSUPPORTED_MODIFY_INHERITANCE_VALUE = 9;
    /**
     * <pre>
     * The following are from LiveEditUpdateException.Error
     * We DO NOT log this. If this shows up in metrics, we know we have a bug at
     * hand.
     * </pre>
     *
     * <code>ANALYSIS_ERROR = 10;</code>
     */
    public static final int ANALYSIS_ERROR_VALUE = 10;
    /**
     * <pre>
     * We DO NOT log this. If this shows up in metrics, we know we have a bug at
     * hand.
     * </pre>
     *
     * <code>COMPILATION_ERROR = 11;</code>
     */
    public static final int COMPILATION_ERROR_VALUE = 11;
    /**
     * <code>NON_KOTLIN = 12;</code>
     */
    public static final int NON_KOTLIN_VALUE = 12;
    /**
     * <code>NON_PRIVATE_INLINE_FUNCTION = 13;</code>
     */
    public static final int NON_PRIVATE_INLINE_FUNCTION_VALUE = 13;
    /**
     * <code>UNABLE_TO_INLINE = 14;</code>
     */
    public static final int UNABLE_TO_INLINE_VALUE = 14;
    /**
     * <code>UNABLE_TO_LOCATE_COMPOSE_GROUP = 15;</code>
     */
    public static final int UNABLE_TO_LOCATE_COMPOSE_GROUP_VALUE = 15;
    /**
     * <code>UNSUPPORTED_BUILD_SRC_CHANGE = 16;</code>
     */
    public static final int UNSUPPORTED_BUILD_SRC_CHANGE_VALUE = 16;
    /**
     * <code>UNSUPPORTED_SRC_CHANGE_RECOVERABLE = 17;</code>
     */
    public static final int UNSUPPORTED_SRC_CHANGE_RECOVERABLE_VALUE = 17;
    /**
     * <code>UNSUPPORTED_SRC_CHANGE_UNRECOVERABLE = 18;</code>
     */
    public static final int UNSUPPORTED_SRC_CHANGE_UNRECOVERABLE_VALUE = 18;
    /**
     * <code>UNSUPPORTED_TEST_SRC_CHANGE = 19;</code>
     */
    public static final int UNSUPPORTED_TEST_SRC_CHANGE_VALUE = 19;
    /**
     * <code>UNABLE_TO_DESUGAR = 20;</code>
     */
    public static final int UNABLE_TO_DESUGAR_VALUE = 20;
    /**
     * <code>INTERNAL_ERROR = 21;</code>
     */
    public static final int INTERNAL_ERROR_VALUE = 21;
    /**
     * <code>KNOWN_ISSUE = 22;</code>
     */
    public static final int KNOWN_ISSUE_VALUE = 22;
    /**
     * <pre>
     * Semantic unsafe operations
     * </pre>
     *
     * <code>PENDING_ERROR_IN_ANOTHER_FILE_AUTO_MODE = 23;</code>
     */
    public static final int PENDING_ERROR_IN_ANOTHER_FILE_AUTO_MODE_VALUE = 23;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Status valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Status forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return SUCCESS;
        case 2: return PUSH_FAILED;
        case 3: return UNSUPPORTED_ADDED_METHOD;
        case 4: return UNSUPPORTED_REMOVED_METHOD;
        case 5: return UNSUPPORTED_ADDED_CLASS;
        case 6: return UNSUPPORTED_ADDED_FIELD;
        case 7: return UNSUPPORTED_REMOVED_FIELD;
        case 8: return UNSUPPORTED_MODIFY_INLINE;
        case 9: return UNSUPPORTED_MODIFY_INHERITANCE;
        case 10: return ANALYSIS_ERROR;
        case 11: return COMPILATION_ERROR;
        case 12: return NON_KOTLIN;
        case 13: return NON_PRIVATE_INLINE_FUNCTION;
        case 14: return UNABLE_TO_INLINE;
        case 15: return UNABLE_TO_LOCATE_COMPOSE_GROUP;
        case 16: return UNSUPPORTED_BUILD_SRC_CHANGE;
        case 17: return UNSUPPORTED_SRC_CHANGE_RECOVERABLE;
        case 18: return UNSUPPORTED_SRC_CHANGE_UNRECOVERABLE;
        case 19: return UNSUPPORTED_TEST_SRC_CHANGE;
        case 20: return UNABLE_TO_DESUGAR;
        case 21: return INTERNAL_ERROR;
        case 22: return KNOWN_ISSUE;
        case 23: return PENDING_ERROR_IN_ANOTHER_FILE_AUTO_MODE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Status> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Status>() {
            public Status findValueByNumber(int number) {
              return Status.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.LiveEditEvent.getDescriptor().getEnumTypes().get(0);
    }

    private static final Status[] VALUES = values();

    public static Status valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Status(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.LiveEditEvent.Status)
  }

  /**
   * Protobuf enum {@code android_studio.LiveEditEvent.Mode}
   */
  public enum Mode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_MODE = 0;</code>
     */
    UNKNOWN_MODE(0),
    /**
     * <pre>
     * The LiveEdit push was triggered automatically.
     * </pre>
     *
     * <code>AUTO = 1;</code>
     */
    AUTO(1),
    /**
     * <pre>
     * The LiveEdit push was triggered by the user.
     * </pre>
     *
     * <code>MANUAL = 2;</code>
     */
    MANUAL(2),
    ;

    /**
     * <code>UNKNOWN_MODE = 0;</code>
     */
    public static final int UNKNOWN_MODE_VALUE = 0;
    /**
     * <pre>
     * The LiveEdit push was triggered automatically.
     * </pre>
     *
     * <code>AUTO = 1;</code>
     */
    public static final int AUTO_VALUE = 1;
    /**
     * <pre>
     * The LiveEdit push was triggered by the user.
     * </pre>
     *
     * <code>MANUAL = 2;</code>
     */
    public static final int MANUAL_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Mode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Mode forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_MODE;
        case 1: return AUTO;
        case 2: return MANUAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Mode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Mode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Mode>() {
            public Mode findValueByNumber(int number) {
              return Mode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.LiveEditEvent.getDescriptor().getEnumTypes().get(1);
    }

    private static final Mode[] VALUES = values();

    public static Mode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Mode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.LiveEditEvent.Mode)
  }

  private int bitField0_;
  public static final int STATUS_FIELD_NUMBER = 1;
  private int status_;
  /**
   * <pre>
   * Result of the LiveEdit device push
   * </pre>
   *
   * <code>optional .android_studio.LiveEditEvent.Status status = 1;</code>
   * @return Whether the status field is set.
   */
  @java.lang.Override public boolean hasStatus() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Result of the LiveEdit device push
   * </pre>
   *
   * <code>optional .android_studio.LiveEditEvent.Status status = 1;</code>
   * @return The status.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.LiveEditEvent.Status getStatus() {
    @SuppressWarnings("deprecation")
    com.google.wireless.android.sdk.stats.LiveEditEvent.Status result = com.google.wireless.android.sdk.stats.LiveEditEvent.Status.valueOf(status_);
    return result == null ? com.google.wireless.android.sdk.stats.LiveEditEvent.Status.UNKNOWN : result;
  }

  public static final int HAS_NON_COMPOSE_FIELD_NUMBER = 2;
  private boolean hasNonCompose_;
  /**
   * <pre>
   * Whether the changed code involves a non-&#64;Composable method
   * </pre>
   *
   * <code>optional bool has_non_compose = 2;</code>
   * @return Whether the hasNonCompose field is set.
   */
  @java.lang.Override
  public boolean hasHasNonCompose() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Whether the changed code involves a non-&#64;Composable method
   * </pre>
   *
   * <code>optional bool has_non_compose = 2;</code>
   * @return The hasNonCompose.
   */
  @java.lang.Override
  public boolean getHasNonCompose() {
    return hasNonCompose_;
  }

  public static final int COMPILE_DURATION_MS_FIELD_NUMBER = 3;
  private long compileDurationMs_;
  /**
   * <pre>
   * The duration of the LiveEdit compile, in milliseconds
   * </pre>
   *
   * <code>optional int64 compile_duration_ms = 3;</code>
   * @return Whether the compileDurationMs field is set.
   */
  @java.lang.Override
  public boolean hasCompileDurationMs() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The duration of the LiveEdit compile, in milliseconds
   * </pre>
   *
   * <code>optional int64 compile_duration_ms = 3;</code>
   * @return The compileDurationMs.
   */
  @java.lang.Override
  public long getCompileDurationMs() {
    return compileDurationMs_;
  }

  public static final int PUSH_DURATION_MS_FIELD_NUMBER = 4;
  private long pushDurationMs_;
  /**
   * <pre>
   * The duration of the LiveEdit push, in milliseconds
   * </pre>
   *
   * <code>optional int64 push_duration_ms = 4;</code>
   * @return Whether the pushDurationMs field is set.
   */
  @java.lang.Override
  public boolean hasPushDurationMs() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The duration of the LiveEdit push, in milliseconds
   * </pre>
   *
   * <code>optional int64 push_duration_ms = 4;</code>
   * @return The pushDurationMs.
   */
  @java.lang.Override
  public long getPushDurationMs() {
    return pushDurationMs_;
  }

  public static final int MODE_FIELD_NUMBER = 5;
  private int mode_;
  /**
   * <pre>
   * How the LiveEdit push was triggered
   * </pre>
   *
   * <code>optional .android_studio.LiveEditEvent.Mode mode = 5;</code>
   * @return Whether the mode field is set.
   */
  @java.lang.Override public boolean hasMode() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * How the LiveEdit push was triggered
   * </pre>
   *
   * <code>optional .android_studio.LiveEditEvent.Mode mode = 5;</code>
   * @return The mode.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.LiveEditEvent.Mode getMode() {
    @SuppressWarnings("deprecation")
    com.google.wireless.android.sdk.stats.LiveEditEvent.Mode result = com.google.wireless.android.sdk.stats.LiveEditEvent.Mode.valueOf(mode_);
    return result == null ? com.google.wireless.android.sdk.stats.LiveEditEvent.Mode.UNKNOWN_MODE : result;
  }

  public static final int PROJECT_ID_FIELD_NUMBER = 6;
  private volatile java.lang.Object projectId_;
  /**
   * <pre>
   * Client-side salted (rotating every 28 days), sha256 of the project base
   * path. Used to correlate LiveEdit usage with Compose projects.
   * </pre>
   *
   * <code>optional string project_id = 6;</code>
   * @return Whether the projectId field is set.
   */
  @java.lang.Override
  public boolean hasProjectId() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Client-side salted (rotating every 28 days), sha256 of the project base
   * path. Used to correlate LiveEdit usage with Compose projects.
   * </pre>
   *
   * <code>optional string project_id = 6;</code>
   * @return The projectId.
   */
  @java.lang.Override
  public java.lang.String getProjectId() {
    java.lang.Object ref = projectId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        projectId_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Client-side salted (rotating every 28 days), sha256 of the project base
   * path. Used to correlate LiveEdit usage with Compose projects.
   * </pre>
   *
   * <code>optional string project_id = 6;</code>
   * @return The bytes for projectId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getProjectIdBytes() {
    java.lang.Object ref = projectId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      projectId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, status_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeBool(2, hasNonCompose_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeInt64(3, compileDurationMs_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeInt64(4, pushDurationMs_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeEnum(5, mode_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, projectId_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, status_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, hasNonCompose_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, compileDurationMs_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, pushDurationMs_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, mode_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, projectId_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.LiveEditEvent)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.LiveEditEvent other = (com.google.wireless.android.sdk.stats.LiveEditEvent) obj;

    if (hasStatus() != other.hasStatus()) return false;
    if (hasStatus()) {
      if (status_ != other.status_) return false;
    }
    if (hasHasNonCompose() != other.hasHasNonCompose()) return false;
    if (hasHasNonCompose()) {
      if (getHasNonCompose()
          != other.getHasNonCompose()) return false;
    }
    if (hasCompileDurationMs() != other.hasCompileDurationMs()) return false;
    if (hasCompileDurationMs()) {
      if (getCompileDurationMs()
          != other.getCompileDurationMs()) return false;
    }
    if (hasPushDurationMs() != other.hasPushDurationMs()) return false;
    if (hasPushDurationMs()) {
      if (getPushDurationMs()
          != other.getPushDurationMs()) return false;
    }
    if (hasMode() != other.hasMode()) return false;
    if (hasMode()) {
      if (mode_ != other.mode_) return false;
    }
    if (hasProjectId() != other.hasProjectId()) return false;
    if (hasProjectId()) {
      if (!getProjectId()
          .equals(other.getProjectId())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasStatus()) {
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
    }
    if (hasHasNonCompose()) {
      hash = (37 * hash) + HAS_NON_COMPOSE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHasNonCompose());
    }
    if (hasCompileDurationMs()) {
      hash = (37 * hash) + COMPILE_DURATION_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCompileDurationMs());
    }
    if (hasPushDurationMs()) {
      hash = (37 * hash) + PUSH_DURATION_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPushDurationMs());
    }
    if (hasMode()) {
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + mode_;
    }
    if (hasProjectId()) {
      hash = (37 * hash) + PROJECT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getProjectId().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.LiveEditEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.LiveEditEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LiveEditEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.LiveEditEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LiveEditEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.LiveEditEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LiveEditEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.LiveEditEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LiveEditEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.LiveEditEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LiveEditEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.LiveEditEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.LiveEditEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code android_studio.LiveEditEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.LiveEditEvent)
      com.google.wireless.android.sdk.stats.LiveEditEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LiveEditEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LiveEditEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.LiveEditEvent.class, com.google.wireless.android.sdk.stats.LiveEditEvent.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.LiveEditEvent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      status_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      hasNonCompose_ = false;
      bitField0_ = (bitField0_ & ~0x00000002);
      compileDurationMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000004);
      pushDurationMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000008);
      mode_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      projectId_ = "";
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LiveEditEvent_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LiveEditEvent getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.LiveEditEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LiveEditEvent build() {
      com.google.wireless.android.sdk.stats.LiveEditEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LiveEditEvent buildPartial() {
      com.google.wireless.android.sdk.stats.LiveEditEvent result = new com.google.wireless.android.sdk.stats.LiveEditEvent(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.status_ = status_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.hasNonCompose_ = hasNonCompose_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.compileDurationMs_ = compileDurationMs_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.pushDurationMs_ = pushDurationMs_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        to_bitField0_ |= 0x00000010;
      }
      result.mode_ = mode_;
      if (((from_bitField0_ & 0x00000020) != 0)) {
        to_bitField0_ |= 0x00000020;
      }
      result.projectId_ = projectId_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.LiveEditEvent) {
        return mergeFrom((com.google.wireless.android.sdk.stats.LiveEditEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.LiveEditEvent other) {
      if (other == com.google.wireless.android.sdk.stats.LiveEditEvent.getDefaultInstance()) return this;
      if (other.hasStatus()) {
        setStatus(other.getStatus());
      }
      if (other.hasHasNonCompose()) {
        setHasNonCompose(other.getHasNonCompose());
      }
      if (other.hasCompileDurationMs()) {
        setCompileDurationMs(other.getCompileDurationMs());
      }
      if (other.hasPushDurationMs()) {
        setPushDurationMs(other.getPushDurationMs());
      }
      if (other.hasMode()) {
        setMode(other.getMode());
      }
      if (other.hasProjectId()) {
        bitField0_ |= 0x00000020;
        projectId_ = other.projectId_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.wireless.android.sdk.stats.LiveEditEvent parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.wireless.android.sdk.stats.LiveEditEvent) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int status_ = 0;
    /**
     * <pre>
     * Result of the LiveEdit device push
     * </pre>
     *
     * <code>optional .android_studio.LiveEditEvent.Status status = 1;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Result of the LiveEdit device push
     * </pre>
     *
     * <code>optional .android_studio.LiveEditEvent.Status status = 1;</code>
     * @return The status.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LiveEditEvent.Status getStatus() {
      @SuppressWarnings("deprecation")
      com.google.wireless.android.sdk.stats.LiveEditEvent.Status result = com.google.wireless.android.sdk.stats.LiveEditEvent.Status.valueOf(status_);
      return result == null ? com.google.wireless.android.sdk.stats.LiveEditEvent.Status.UNKNOWN : result;
    }
    /**
     * <pre>
     * Result of the LiveEdit device push
     * </pre>
     *
     * <code>optional .android_studio.LiveEditEvent.Status status = 1;</code>
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(com.google.wireless.android.sdk.stats.LiveEditEvent.Status value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Result of the LiveEdit device push
     * </pre>
     *
     * <code>optional .android_studio.LiveEditEvent.Status status = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000001);
      status_ = 0;
      onChanged();
      return this;
    }

    private boolean hasNonCompose_ ;
    /**
     * <pre>
     * Whether the changed code involves a non-&#64;Composable method
     * </pre>
     *
     * <code>optional bool has_non_compose = 2;</code>
     * @return Whether the hasNonCompose field is set.
     */
    @java.lang.Override
    public boolean hasHasNonCompose() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Whether the changed code involves a non-&#64;Composable method
     * </pre>
     *
     * <code>optional bool has_non_compose = 2;</code>
     * @return The hasNonCompose.
     */
    @java.lang.Override
    public boolean getHasNonCompose() {
      return hasNonCompose_;
    }
    /**
     * <pre>
     * Whether the changed code involves a non-&#64;Composable method
     * </pre>
     *
     * <code>optional bool has_non_compose = 2;</code>
     * @param value The hasNonCompose to set.
     * @return This builder for chaining.
     */
    public Builder setHasNonCompose(boolean value) {
      bitField0_ |= 0x00000002;
      hasNonCompose_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the changed code involves a non-&#64;Composable method
     * </pre>
     *
     * <code>optional bool has_non_compose = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearHasNonCompose() {
      bitField0_ = (bitField0_ & ~0x00000002);
      hasNonCompose_ = false;
      onChanged();
      return this;
    }

    private long compileDurationMs_ ;
    /**
     * <pre>
     * The duration of the LiveEdit compile, in milliseconds
     * </pre>
     *
     * <code>optional int64 compile_duration_ms = 3;</code>
     * @return Whether the compileDurationMs field is set.
     */
    @java.lang.Override
    public boolean hasCompileDurationMs() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The duration of the LiveEdit compile, in milliseconds
     * </pre>
     *
     * <code>optional int64 compile_duration_ms = 3;</code>
     * @return The compileDurationMs.
     */
    @java.lang.Override
    public long getCompileDurationMs() {
      return compileDurationMs_;
    }
    /**
     * <pre>
     * The duration of the LiveEdit compile, in milliseconds
     * </pre>
     *
     * <code>optional int64 compile_duration_ms = 3;</code>
     * @param value The compileDurationMs to set.
     * @return This builder for chaining.
     */
    public Builder setCompileDurationMs(long value) {
      bitField0_ |= 0x00000004;
      compileDurationMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The duration of the LiveEdit compile, in milliseconds
     * </pre>
     *
     * <code>optional int64 compile_duration_ms = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCompileDurationMs() {
      bitField0_ = (bitField0_ & ~0x00000004);
      compileDurationMs_ = 0L;
      onChanged();
      return this;
    }

    private long pushDurationMs_ ;
    /**
     * <pre>
     * The duration of the LiveEdit push, in milliseconds
     * </pre>
     *
     * <code>optional int64 push_duration_ms = 4;</code>
     * @return Whether the pushDurationMs field is set.
     */
    @java.lang.Override
    public boolean hasPushDurationMs() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The duration of the LiveEdit push, in milliseconds
     * </pre>
     *
     * <code>optional int64 push_duration_ms = 4;</code>
     * @return The pushDurationMs.
     */
    @java.lang.Override
    public long getPushDurationMs() {
      return pushDurationMs_;
    }
    /**
     * <pre>
     * The duration of the LiveEdit push, in milliseconds
     * </pre>
     *
     * <code>optional int64 push_duration_ms = 4;</code>
     * @param value The pushDurationMs to set.
     * @return This builder for chaining.
     */
    public Builder setPushDurationMs(long value) {
      bitField0_ |= 0x00000008;
      pushDurationMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The duration of the LiveEdit push, in milliseconds
     * </pre>
     *
     * <code>optional int64 push_duration_ms = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearPushDurationMs() {
      bitField0_ = (bitField0_ & ~0x00000008);
      pushDurationMs_ = 0L;
      onChanged();
      return this;
    }

    private int mode_ = 0;
    /**
     * <pre>
     * How the LiveEdit push was triggered
     * </pre>
     *
     * <code>optional .android_studio.LiveEditEvent.Mode mode = 5;</code>
     * @return Whether the mode field is set.
     */
    @java.lang.Override public boolean hasMode() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * How the LiveEdit push was triggered
     * </pre>
     *
     * <code>optional .android_studio.LiveEditEvent.Mode mode = 5;</code>
     * @return The mode.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LiveEditEvent.Mode getMode() {
      @SuppressWarnings("deprecation")
      com.google.wireless.android.sdk.stats.LiveEditEvent.Mode result = com.google.wireless.android.sdk.stats.LiveEditEvent.Mode.valueOf(mode_);
      return result == null ? com.google.wireless.android.sdk.stats.LiveEditEvent.Mode.UNKNOWN_MODE : result;
    }
    /**
     * <pre>
     * How the LiveEdit push was triggered
     * </pre>
     *
     * <code>optional .android_studio.LiveEditEvent.Mode mode = 5;</code>
     * @param value The mode to set.
     * @return This builder for chaining.
     */
    public Builder setMode(com.google.wireless.android.sdk.stats.LiveEditEvent.Mode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      mode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How the LiveEdit push was triggered
     * </pre>
     *
     * <code>optional .android_studio.LiveEditEvent.Mode mode = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearMode() {
      bitField0_ = (bitField0_ & ~0x00000010);
      mode_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object projectId_ = "";
    /**
     * <pre>
     * Client-side salted (rotating every 28 days), sha256 of the project base
     * path. Used to correlate LiveEdit usage with Compose projects.
     * </pre>
     *
     * <code>optional string project_id = 6;</code>
     * @return Whether the projectId field is set.
     */
    public boolean hasProjectId() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Client-side salted (rotating every 28 days), sha256 of the project base
     * path. Used to correlate LiveEdit usage with Compose projects.
     * </pre>
     *
     * <code>optional string project_id = 6;</code>
     * @return The projectId.
     */
    public java.lang.String getProjectId() {
      java.lang.Object ref = projectId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          projectId_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Client-side salted (rotating every 28 days), sha256 of the project base
     * path. Used to correlate LiveEdit usage with Compose projects.
     * </pre>
     *
     * <code>optional string project_id = 6;</code>
     * @return The bytes for projectId.
     */
    public com.google.protobuf.ByteString
        getProjectIdBytes() {
      java.lang.Object ref = projectId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        projectId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Client-side salted (rotating every 28 days), sha256 of the project base
     * path. Used to correlate LiveEdit usage with Compose projects.
     * </pre>
     *
     * <code>optional string project_id = 6;</code>
     * @param value The projectId to set.
     * @return This builder for chaining.
     */
    public Builder setProjectId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      projectId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Client-side salted (rotating every 28 days), sha256 of the project base
     * path. Used to correlate LiveEdit usage with Compose projects.
     * </pre>
     *
     * <code>optional string project_id = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearProjectId() {
      bitField0_ = (bitField0_ & ~0x00000020);
      projectId_ = getDefaultInstance().getProjectId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Client-side salted (rotating every 28 days), sha256 of the project base
     * path. Used to correlate LiveEdit usage with Compose projects.
     * </pre>
     *
     * <code>optional string project_id = 6;</code>
     * @param value The bytes for projectId to set.
     * @return This builder for chaining.
     */
    public Builder setProjectIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      projectId_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.LiveEditEvent)
  }

  // @@protoc_insertion_point(class_scope:android_studio.LiveEditEvent)
  private static final com.google.wireless.android.sdk.stats.LiveEditEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.LiveEditEvent();
  }

  public static com.google.wireless.android.sdk.stats.LiveEditEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<LiveEditEvent>
      PARSER = new com.google.protobuf.AbstractParser<LiveEditEvent>() {
    @java.lang.Override
    public LiveEditEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new LiveEditEvent(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<LiveEditEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LiveEditEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.LiveEditEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

