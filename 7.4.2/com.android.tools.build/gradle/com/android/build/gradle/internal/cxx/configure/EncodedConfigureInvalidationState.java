// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cxx_configure.proto

package com.android.build.gradle.internal.cxx.configure;

/**
 * Protobuf type {@code EncodedConfigureInvalidationState}
 */
public final class EncodedConfigureInvalidationState extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:EncodedConfigureInvalidationState)
    EncodedConfigureInvalidationStateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EncodedConfigureInvalidationState.newBuilder() to construct.
  private EncodedConfigureInvalidationState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EncodedConfigureInvalidationState() {
    changesToFingerPrintFiles_ = java.util.Collections.emptyList();
    configureType_ = 0;
    softConfigureReasons_ = java.util.Collections.emptyList();
    hardConfigureReasons_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EncodedConfigureInvalidationState();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EncodedConfigureInvalidationState(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            forceConfigure_ = input.readBool();
            break;
          }
          case 16: {

            fingerPrintFile_ = input.readInt32();
            break;
          }
          case 24: {

            inputFiles_ = input.readInt32();
            break;
          }
          case 32: {

            requiredOutputFiles_ = input.readInt32();
            break;
          }
          case 40: {

            optionalOutputFiles_ = input.readInt32();
            break;
          }
          case 48: {

            hardConfigureFiles_ = input.readInt32();
            break;
          }
          case 56: {

            fingerPrintFileExisted_ = input.readBool();
            break;
          }
          case 64: {

            removedSinceFingerPrintsFiles_ = input.readInt32();
            break;
          }
          case 72: {

            addedSinceFingerPrintsFiles_ = input.readInt32();
            break;
          }
          case 82: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              changesToFingerPrintFiles_ = new java.util.ArrayList<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile>();
              mutable_bitField0_ |= 0x00000001;
            }
            changesToFingerPrintFiles_.add(
                input.readMessage(com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.parser(), extensionRegistry));
            break;
          }
          case 88: {

            unchangedFingerPrintFiles_ = input.readInt32();
            break;
          }
          case 96: {
            int rawValue = input.readEnum();

            configureType_ = rawValue;
            break;
          }
          case 106: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              softConfigureReasons_ = new java.util.ArrayList<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile>();
              mutable_bitField0_ |= 0x00000002;
            }
            softConfigureReasons_.add(
                input.readMessage(com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.parser(), extensionRegistry));
            break;
          }
          case 114: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              hardConfigureReasons_ = new java.util.ArrayList<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile>();
              mutable_bitField0_ |= 0x00000004;
            }
            hardConfigureReasons_.add(
                input.readMessage(com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        changesToFingerPrintFiles_ = java.util.Collections.unmodifiableList(changesToFingerPrintFiles_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        softConfigureReasons_ = java.util.Collections.unmodifiableList(softConfigureReasons_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        hardConfigureReasons_ = java.util.Collections.unmodifiableList(hardConfigureReasons_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.android.build.gradle.internal.cxx.configure.CxxConfigure.internal_static_EncodedConfigureInvalidationState_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.android.build.gradle.internal.cxx.configure.CxxConfigure.internal_static_EncodedConfigureInvalidationState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState.class, com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState.Builder.class);
  }

  public static final int FORCE_CONFIGURE_FIELD_NUMBER = 1;
  private boolean forceConfigure_;
  /**
   * <code>bool force_configure = 1;</code>
   * @return The forceConfigure.
   */
  @java.lang.Override
  public boolean getForceConfigure() {
    return forceConfigure_;
  }

  public static final int FINGER_PRINT_FILE_FIELD_NUMBER = 2;
  private int fingerPrintFile_;
  /**
   * <code>int32 finger_print_file = 2;</code>
   * @return The fingerPrintFile.
   */
  @java.lang.Override
  public int getFingerPrintFile() {
    return fingerPrintFile_;
  }

  public static final int INPUT_FILES_FIELD_NUMBER = 3;
  private int inputFiles_;
  /**
   * <code>int32 input_files = 3;</code>
   * @return The inputFiles.
   */
  @java.lang.Override
  public int getInputFiles() {
    return inputFiles_;
  }

  public static final int REQUIRED_OUTPUT_FILES_FIELD_NUMBER = 4;
  private int requiredOutputFiles_;
  /**
   * <code>int32 required_output_files = 4;</code>
   * @return The requiredOutputFiles.
   */
  @java.lang.Override
  public int getRequiredOutputFiles() {
    return requiredOutputFiles_;
  }

  public static final int OPTIONAL_OUTPUT_FILES_FIELD_NUMBER = 5;
  private int optionalOutputFiles_;
  /**
   * <code>int32 optional_output_files = 5;</code>
   * @return The optionalOutputFiles.
   */
  @java.lang.Override
  public int getOptionalOutputFiles() {
    return optionalOutputFiles_;
  }

  public static final int HARD_CONFIGURE_FILES_FIELD_NUMBER = 6;
  private int hardConfigureFiles_;
  /**
   * <code>int32 hard_configure_files = 6;</code>
   * @return The hardConfigureFiles.
   */
  @java.lang.Override
  public int getHardConfigureFiles() {
    return hardConfigureFiles_;
  }

  public static final int FINGER_PRINT_FILE_EXISTED_FIELD_NUMBER = 7;
  private boolean fingerPrintFileExisted_;
  /**
   * <code>bool finger_print_file_existed = 7;</code>
   * @return The fingerPrintFileExisted.
   */
  @java.lang.Override
  public boolean getFingerPrintFileExisted() {
    return fingerPrintFileExisted_;
  }

  public static final int REMOVED_SINCE_FINGER_PRINTS_FILES_FIELD_NUMBER = 8;
  private int removedSinceFingerPrintsFiles_;
  /**
   * <code>int32 removed_since_finger_prints_files = 8;</code>
   * @return The removedSinceFingerPrintsFiles.
   */
  @java.lang.Override
  public int getRemovedSinceFingerPrintsFiles() {
    return removedSinceFingerPrintsFiles_;
  }

  public static final int ADDED_SINCE_FINGER_PRINTS_FILES_FIELD_NUMBER = 9;
  private int addedSinceFingerPrintsFiles_;
  /**
   * <code>int32 added_since_finger_prints_files = 9;</code>
   * @return The addedSinceFingerPrintsFiles.
   */
  @java.lang.Override
  public int getAddedSinceFingerPrintsFiles() {
    return addedSinceFingerPrintsFiles_;
  }

  public static final int CHANGES_TO_FINGER_PRINT_FILES_FIELD_NUMBER = 10;
  private java.util.List<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile> changesToFingerPrintFiles_;
  /**
   * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
   */
  @java.lang.Override
  public java.util.List<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile> getChangesToFingerPrintFilesList() {
    return changesToFingerPrintFiles_;
  }
  /**
   * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder>
      getChangesToFingerPrintFilesOrBuilderList() {
    return changesToFingerPrintFiles_;
  }
  /**
   * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
   */
  @java.lang.Override
  public int getChangesToFingerPrintFilesCount() {
    return changesToFingerPrintFiles_.size();
  }
  /**
   * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
   */
  @java.lang.Override
  public com.android.build.gradle.internal.cxx.configure.EncodedChangedFile getChangesToFingerPrintFiles(int index) {
    return changesToFingerPrintFiles_.get(index);
  }
  /**
   * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
   */
  @java.lang.Override
  public com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder getChangesToFingerPrintFilesOrBuilder(
      int index) {
    return changesToFingerPrintFiles_.get(index);
  }

  public static final int UNCHANGED_FINGER_PRINT_FILES_FIELD_NUMBER = 11;
  private int unchangedFingerPrintFiles_;
  /**
   * <code>int32 unchanged_finger_print_files = 11;</code>
   * @return The unchangedFingerPrintFiles.
   */
  @java.lang.Override
  public int getUnchangedFingerPrintFiles() {
    return unchangedFingerPrintFiles_;
  }

  public static final int CONFIGURE_TYPE_FIELD_NUMBER = 12;
  private int configureType_;
  /**
   * <code>.ConfigureType configure_type = 12;</code>
   * @return The enum numeric value on the wire for configureType.
   */
  @java.lang.Override public int getConfigureTypeValue() {
    return configureType_;
  }
  /**
   * <code>.ConfigureType configure_type = 12;</code>
   * @return The configureType.
   */
  @java.lang.Override public com.android.build.gradle.internal.cxx.configure.ConfigureType getConfigureType() {
    @SuppressWarnings("deprecation")
    com.android.build.gradle.internal.cxx.configure.ConfigureType result = com.android.build.gradle.internal.cxx.configure.ConfigureType.valueOf(configureType_);
    return result == null ? com.android.build.gradle.internal.cxx.configure.ConfigureType.UNRECOGNIZED : result;
  }

  public static final int SOFT_CONFIGURE_REASONS_FIELD_NUMBER = 13;
  private java.util.List<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile> softConfigureReasons_;
  /**
   * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
   */
  @java.lang.Override
  public java.util.List<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile> getSoftConfigureReasonsList() {
    return softConfigureReasons_;
  }
  /**
   * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder>
      getSoftConfigureReasonsOrBuilderList() {
    return softConfigureReasons_;
  }
  /**
   * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
   */
  @java.lang.Override
  public int getSoftConfigureReasonsCount() {
    return softConfigureReasons_.size();
  }
  /**
   * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
   */
  @java.lang.Override
  public com.android.build.gradle.internal.cxx.configure.EncodedChangedFile getSoftConfigureReasons(int index) {
    return softConfigureReasons_.get(index);
  }
  /**
   * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
   */
  @java.lang.Override
  public com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder getSoftConfigureReasonsOrBuilder(
      int index) {
    return softConfigureReasons_.get(index);
  }

  public static final int HARD_CONFIGURE_REASONS_FIELD_NUMBER = 14;
  private java.util.List<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile> hardConfigureReasons_;
  /**
   * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
   */
  @java.lang.Override
  public java.util.List<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile> getHardConfigureReasonsList() {
    return hardConfigureReasons_;
  }
  /**
   * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder>
      getHardConfigureReasonsOrBuilderList() {
    return hardConfigureReasons_;
  }
  /**
   * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
   */
  @java.lang.Override
  public int getHardConfigureReasonsCount() {
    return hardConfigureReasons_.size();
  }
  /**
   * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
   */
  @java.lang.Override
  public com.android.build.gradle.internal.cxx.configure.EncodedChangedFile getHardConfigureReasons(int index) {
    return hardConfigureReasons_.get(index);
  }
  /**
   * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
   */
  @java.lang.Override
  public com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder getHardConfigureReasonsOrBuilder(
      int index) {
    return hardConfigureReasons_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (forceConfigure_ != false) {
      output.writeBool(1, forceConfigure_);
    }
    if (fingerPrintFile_ != 0) {
      output.writeInt32(2, fingerPrintFile_);
    }
    if (inputFiles_ != 0) {
      output.writeInt32(3, inputFiles_);
    }
    if (requiredOutputFiles_ != 0) {
      output.writeInt32(4, requiredOutputFiles_);
    }
    if (optionalOutputFiles_ != 0) {
      output.writeInt32(5, optionalOutputFiles_);
    }
    if (hardConfigureFiles_ != 0) {
      output.writeInt32(6, hardConfigureFiles_);
    }
    if (fingerPrintFileExisted_ != false) {
      output.writeBool(7, fingerPrintFileExisted_);
    }
    if (removedSinceFingerPrintsFiles_ != 0) {
      output.writeInt32(8, removedSinceFingerPrintsFiles_);
    }
    if (addedSinceFingerPrintsFiles_ != 0) {
      output.writeInt32(9, addedSinceFingerPrintsFiles_);
    }
    for (int i = 0; i < changesToFingerPrintFiles_.size(); i++) {
      output.writeMessage(10, changesToFingerPrintFiles_.get(i));
    }
    if (unchangedFingerPrintFiles_ != 0) {
      output.writeInt32(11, unchangedFingerPrintFiles_);
    }
    if (configureType_ != com.android.build.gradle.internal.cxx.configure.ConfigureType.UNKNOWN_CONFIGURE_TYPE.getNumber()) {
      output.writeEnum(12, configureType_);
    }
    for (int i = 0; i < softConfigureReasons_.size(); i++) {
      output.writeMessage(13, softConfigureReasons_.get(i));
    }
    for (int i = 0; i < hardConfigureReasons_.size(); i++) {
      output.writeMessage(14, hardConfigureReasons_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (forceConfigure_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, forceConfigure_);
    }
    if (fingerPrintFile_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, fingerPrintFile_);
    }
    if (inputFiles_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, inputFiles_);
    }
    if (requiredOutputFiles_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, requiredOutputFiles_);
    }
    if (optionalOutputFiles_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, optionalOutputFiles_);
    }
    if (hardConfigureFiles_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, hardConfigureFiles_);
    }
    if (fingerPrintFileExisted_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, fingerPrintFileExisted_);
    }
    if (removedSinceFingerPrintsFiles_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, removedSinceFingerPrintsFiles_);
    }
    if (addedSinceFingerPrintsFiles_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, addedSinceFingerPrintsFiles_);
    }
    for (int i = 0; i < changesToFingerPrintFiles_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, changesToFingerPrintFiles_.get(i));
    }
    if (unchangedFingerPrintFiles_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, unchangedFingerPrintFiles_);
    }
    if (configureType_ != com.android.build.gradle.internal.cxx.configure.ConfigureType.UNKNOWN_CONFIGURE_TYPE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(12, configureType_);
    }
    for (int i = 0; i < softConfigureReasons_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, softConfigureReasons_.get(i));
    }
    for (int i = 0; i < hardConfigureReasons_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, hardConfigureReasons_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState)) {
      return super.equals(obj);
    }
    com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState other = (com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState) obj;

    if (getForceConfigure()
        != other.getForceConfigure()) return false;
    if (getFingerPrintFile()
        != other.getFingerPrintFile()) return false;
    if (getInputFiles()
        != other.getInputFiles()) return false;
    if (getRequiredOutputFiles()
        != other.getRequiredOutputFiles()) return false;
    if (getOptionalOutputFiles()
        != other.getOptionalOutputFiles()) return false;
    if (getHardConfigureFiles()
        != other.getHardConfigureFiles()) return false;
    if (getFingerPrintFileExisted()
        != other.getFingerPrintFileExisted()) return false;
    if (getRemovedSinceFingerPrintsFiles()
        != other.getRemovedSinceFingerPrintsFiles()) return false;
    if (getAddedSinceFingerPrintsFiles()
        != other.getAddedSinceFingerPrintsFiles()) return false;
    if (!getChangesToFingerPrintFilesList()
        .equals(other.getChangesToFingerPrintFilesList())) return false;
    if (getUnchangedFingerPrintFiles()
        != other.getUnchangedFingerPrintFiles()) return false;
    if (configureType_ != other.configureType_) return false;
    if (!getSoftConfigureReasonsList()
        .equals(other.getSoftConfigureReasonsList())) return false;
    if (!getHardConfigureReasonsList()
        .equals(other.getHardConfigureReasonsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FORCE_CONFIGURE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getForceConfigure());
    hash = (37 * hash) + FINGER_PRINT_FILE_FIELD_NUMBER;
    hash = (53 * hash) + getFingerPrintFile();
    hash = (37 * hash) + INPUT_FILES_FIELD_NUMBER;
    hash = (53 * hash) + getInputFiles();
    hash = (37 * hash) + REQUIRED_OUTPUT_FILES_FIELD_NUMBER;
    hash = (53 * hash) + getRequiredOutputFiles();
    hash = (37 * hash) + OPTIONAL_OUTPUT_FILES_FIELD_NUMBER;
    hash = (53 * hash) + getOptionalOutputFiles();
    hash = (37 * hash) + HARD_CONFIGURE_FILES_FIELD_NUMBER;
    hash = (53 * hash) + getHardConfigureFiles();
    hash = (37 * hash) + FINGER_PRINT_FILE_EXISTED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFingerPrintFileExisted());
    hash = (37 * hash) + REMOVED_SINCE_FINGER_PRINTS_FILES_FIELD_NUMBER;
    hash = (53 * hash) + getRemovedSinceFingerPrintsFiles();
    hash = (37 * hash) + ADDED_SINCE_FINGER_PRINTS_FILES_FIELD_NUMBER;
    hash = (53 * hash) + getAddedSinceFingerPrintsFiles();
    if (getChangesToFingerPrintFilesCount() > 0) {
      hash = (37 * hash) + CHANGES_TO_FINGER_PRINT_FILES_FIELD_NUMBER;
      hash = (53 * hash) + getChangesToFingerPrintFilesList().hashCode();
    }
    hash = (37 * hash) + UNCHANGED_FINGER_PRINT_FILES_FIELD_NUMBER;
    hash = (53 * hash) + getUnchangedFingerPrintFiles();
    hash = (37 * hash) + CONFIGURE_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + configureType_;
    if (getSoftConfigureReasonsCount() > 0) {
      hash = (37 * hash) + SOFT_CONFIGURE_REASONS_FIELD_NUMBER;
      hash = (53 * hash) + getSoftConfigureReasonsList().hashCode();
    }
    if (getHardConfigureReasonsCount() > 0) {
      hash = (37 * hash) + HARD_CONFIGURE_REASONS_FIELD_NUMBER;
      hash = (53 * hash) + getHardConfigureReasonsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code EncodedConfigureInvalidationState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:EncodedConfigureInvalidationState)
      com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.build.gradle.internal.cxx.configure.CxxConfigure.internal_static_EncodedConfigureInvalidationState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.build.gradle.internal.cxx.configure.CxxConfigure.internal_static_EncodedConfigureInvalidationState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState.class, com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState.Builder.class);
    }

    // Construct using com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getChangesToFingerPrintFilesFieldBuilder();
        getSoftConfigureReasonsFieldBuilder();
        getHardConfigureReasonsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      forceConfigure_ = false;

      fingerPrintFile_ = 0;

      inputFiles_ = 0;

      requiredOutputFiles_ = 0;

      optionalOutputFiles_ = 0;

      hardConfigureFiles_ = 0;

      fingerPrintFileExisted_ = false;

      removedSinceFingerPrintsFiles_ = 0;

      addedSinceFingerPrintsFiles_ = 0;

      if (changesToFingerPrintFilesBuilder_ == null) {
        changesToFingerPrintFiles_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        changesToFingerPrintFilesBuilder_.clear();
      }
      unchangedFingerPrintFiles_ = 0;

      configureType_ = 0;

      if (softConfigureReasonsBuilder_ == null) {
        softConfigureReasons_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        softConfigureReasonsBuilder_.clear();
      }
      if (hardConfigureReasonsBuilder_ == null) {
        hardConfigureReasons_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        hardConfigureReasonsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.android.build.gradle.internal.cxx.configure.CxxConfigure.internal_static_EncodedConfigureInvalidationState_descriptor;
    }

    @java.lang.Override
    public com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState getDefaultInstanceForType() {
      return com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState.getDefaultInstance();
    }

    @java.lang.Override
    public com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState build() {
      com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState buildPartial() {
      com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState result = new com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState(this);
      int from_bitField0_ = bitField0_;
      result.forceConfigure_ = forceConfigure_;
      result.fingerPrintFile_ = fingerPrintFile_;
      result.inputFiles_ = inputFiles_;
      result.requiredOutputFiles_ = requiredOutputFiles_;
      result.optionalOutputFiles_ = optionalOutputFiles_;
      result.hardConfigureFiles_ = hardConfigureFiles_;
      result.fingerPrintFileExisted_ = fingerPrintFileExisted_;
      result.removedSinceFingerPrintsFiles_ = removedSinceFingerPrintsFiles_;
      result.addedSinceFingerPrintsFiles_ = addedSinceFingerPrintsFiles_;
      if (changesToFingerPrintFilesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          changesToFingerPrintFiles_ = java.util.Collections.unmodifiableList(changesToFingerPrintFiles_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.changesToFingerPrintFiles_ = changesToFingerPrintFiles_;
      } else {
        result.changesToFingerPrintFiles_ = changesToFingerPrintFilesBuilder_.build();
      }
      result.unchangedFingerPrintFiles_ = unchangedFingerPrintFiles_;
      result.configureType_ = configureType_;
      if (softConfigureReasonsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          softConfigureReasons_ = java.util.Collections.unmodifiableList(softConfigureReasons_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.softConfigureReasons_ = softConfigureReasons_;
      } else {
        result.softConfigureReasons_ = softConfigureReasonsBuilder_.build();
      }
      if (hardConfigureReasonsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          hardConfigureReasons_ = java.util.Collections.unmodifiableList(hardConfigureReasons_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.hardConfigureReasons_ = hardConfigureReasons_;
      } else {
        result.hardConfigureReasons_ = hardConfigureReasonsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState) {
        return mergeFrom((com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState other) {
      if (other == com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState.getDefaultInstance()) return this;
      if (other.getForceConfigure() != false) {
        setForceConfigure(other.getForceConfigure());
      }
      if (other.getFingerPrintFile() != 0) {
        setFingerPrintFile(other.getFingerPrintFile());
      }
      if (other.getInputFiles() != 0) {
        setInputFiles(other.getInputFiles());
      }
      if (other.getRequiredOutputFiles() != 0) {
        setRequiredOutputFiles(other.getRequiredOutputFiles());
      }
      if (other.getOptionalOutputFiles() != 0) {
        setOptionalOutputFiles(other.getOptionalOutputFiles());
      }
      if (other.getHardConfigureFiles() != 0) {
        setHardConfigureFiles(other.getHardConfigureFiles());
      }
      if (other.getFingerPrintFileExisted() != false) {
        setFingerPrintFileExisted(other.getFingerPrintFileExisted());
      }
      if (other.getRemovedSinceFingerPrintsFiles() != 0) {
        setRemovedSinceFingerPrintsFiles(other.getRemovedSinceFingerPrintsFiles());
      }
      if (other.getAddedSinceFingerPrintsFiles() != 0) {
        setAddedSinceFingerPrintsFiles(other.getAddedSinceFingerPrintsFiles());
      }
      if (changesToFingerPrintFilesBuilder_ == null) {
        if (!other.changesToFingerPrintFiles_.isEmpty()) {
          if (changesToFingerPrintFiles_.isEmpty()) {
            changesToFingerPrintFiles_ = other.changesToFingerPrintFiles_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureChangesToFingerPrintFilesIsMutable();
            changesToFingerPrintFiles_.addAll(other.changesToFingerPrintFiles_);
          }
          onChanged();
        }
      } else {
        if (!other.changesToFingerPrintFiles_.isEmpty()) {
          if (changesToFingerPrintFilesBuilder_.isEmpty()) {
            changesToFingerPrintFilesBuilder_.dispose();
            changesToFingerPrintFilesBuilder_ = null;
            changesToFingerPrintFiles_ = other.changesToFingerPrintFiles_;
            bitField0_ = (bitField0_ & ~0x00000001);
            changesToFingerPrintFilesBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getChangesToFingerPrintFilesFieldBuilder() : null;
          } else {
            changesToFingerPrintFilesBuilder_.addAllMessages(other.changesToFingerPrintFiles_);
          }
        }
      }
      if (other.getUnchangedFingerPrintFiles() != 0) {
        setUnchangedFingerPrintFiles(other.getUnchangedFingerPrintFiles());
      }
      if (other.configureType_ != 0) {
        setConfigureTypeValue(other.getConfigureTypeValue());
      }
      if (softConfigureReasonsBuilder_ == null) {
        if (!other.softConfigureReasons_.isEmpty()) {
          if (softConfigureReasons_.isEmpty()) {
            softConfigureReasons_ = other.softConfigureReasons_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSoftConfigureReasonsIsMutable();
            softConfigureReasons_.addAll(other.softConfigureReasons_);
          }
          onChanged();
        }
      } else {
        if (!other.softConfigureReasons_.isEmpty()) {
          if (softConfigureReasonsBuilder_.isEmpty()) {
            softConfigureReasonsBuilder_.dispose();
            softConfigureReasonsBuilder_ = null;
            softConfigureReasons_ = other.softConfigureReasons_;
            bitField0_ = (bitField0_ & ~0x00000002);
            softConfigureReasonsBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSoftConfigureReasonsFieldBuilder() : null;
          } else {
            softConfigureReasonsBuilder_.addAllMessages(other.softConfigureReasons_);
          }
        }
      }
      if (hardConfigureReasonsBuilder_ == null) {
        if (!other.hardConfigureReasons_.isEmpty()) {
          if (hardConfigureReasons_.isEmpty()) {
            hardConfigureReasons_ = other.hardConfigureReasons_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureHardConfigureReasonsIsMutable();
            hardConfigureReasons_.addAll(other.hardConfigureReasons_);
          }
          onChanged();
        }
      } else {
        if (!other.hardConfigureReasons_.isEmpty()) {
          if (hardConfigureReasonsBuilder_.isEmpty()) {
            hardConfigureReasonsBuilder_.dispose();
            hardConfigureReasonsBuilder_ = null;
            hardConfigureReasons_ = other.hardConfigureReasons_;
            bitField0_ = (bitField0_ & ~0x00000004);
            hardConfigureReasonsBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHardConfigureReasonsFieldBuilder() : null;
          } else {
            hardConfigureReasonsBuilder_.addAllMessages(other.hardConfigureReasons_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private boolean forceConfigure_ ;
    /**
     * <code>bool force_configure = 1;</code>
     * @return The forceConfigure.
     */
    @java.lang.Override
    public boolean getForceConfigure() {
      return forceConfigure_;
    }
    /**
     * <code>bool force_configure = 1;</code>
     * @param value The forceConfigure to set.
     * @return This builder for chaining.
     */
    public Builder setForceConfigure(boolean value) {

      forceConfigure_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool force_configure = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearForceConfigure() {

      forceConfigure_ = false;
      onChanged();
      return this;
    }

    private int fingerPrintFile_ ;
    /**
     * <code>int32 finger_print_file = 2;</code>
     * @return The fingerPrintFile.
     */
    @java.lang.Override
    public int getFingerPrintFile() {
      return fingerPrintFile_;
    }
    /**
     * <code>int32 finger_print_file = 2;</code>
     * @param value The fingerPrintFile to set.
     * @return This builder for chaining.
     */
    public Builder setFingerPrintFile(int value) {

      fingerPrintFile_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 finger_print_file = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearFingerPrintFile() {

      fingerPrintFile_ = 0;
      onChanged();
      return this;
    }

    private int inputFiles_ ;
    /**
     * <code>int32 input_files = 3;</code>
     * @return The inputFiles.
     */
    @java.lang.Override
    public int getInputFiles() {
      return inputFiles_;
    }
    /**
     * <code>int32 input_files = 3;</code>
     * @param value The inputFiles to set.
     * @return This builder for chaining.
     */
    public Builder setInputFiles(int value) {

      inputFiles_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 input_files = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearInputFiles() {

      inputFiles_ = 0;
      onChanged();
      return this;
    }

    private int requiredOutputFiles_ ;
    /**
     * <code>int32 required_output_files = 4;</code>
     * @return The requiredOutputFiles.
     */
    @java.lang.Override
    public int getRequiredOutputFiles() {
      return requiredOutputFiles_;
    }
    /**
     * <code>int32 required_output_files = 4;</code>
     * @param value The requiredOutputFiles to set.
     * @return This builder for chaining.
     */
    public Builder setRequiredOutputFiles(int value) {

      requiredOutputFiles_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 required_output_files = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearRequiredOutputFiles() {

      requiredOutputFiles_ = 0;
      onChanged();
      return this;
    }

    private int optionalOutputFiles_ ;
    /**
     * <code>int32 optional_output_files = 5;</code>
     * @return The optionalOutputFiles.
     */
    @java.lang.Override
    public int getOptionalOutputFiles() {
      return optionalOutputFiles_;
    }
    /**
     * <code>int32 optional_output_files = 5;</code>
     * @param value The optionalOutputFiles to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalOutputFiles(int value) {

      optionalOutputFiles_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 optional_output_files = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalOutputFiles() {

      optionalOutputFiles_ = 0;
      onChanged();
      return this;
    }

    private int hardConfigureFiles_ ;
    /**
     * <code>int32 hard_configure_files = 6;</code>
     * @return The hardConfigureFiles.
     */
    @java.lang.Override
    public int getHardConfigureFiles() {
      return hardConfigureFiles_;
    }
    /**
     * <code>int32 hard_configure_files = 6;</code>
     * @param value The hardConfigureFiles to set.
     * @return This builder for chaining.
     */
    public Builder setHardConfigureFiles(int value) {

      hardConfigureFiles_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 hard_configure_files = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearHardConfigureFiles() {

      hardConfigureFiles_ = 0;
      onChanged();
      return this;
    }

    private boolean fingerPrintFileExisted_ ;
    /**
     * <code>bool finger_print_file_existed = 7;</code>
     * @return The fingerPrintFileExisted.
     */
    @java.lang.Override
    public boolean getFingerPrintFileExisted() {
      return fingerPrintFileExisted_;
    }
    /**
     * <code>bool finger_print_file_existed = 7;</code>
     * @param value The fingerPrintFileExisted to set.
     * @return This builder for chaining.
     */
    public Builder setFingerPrintFileExisted(boolean value) {

      fingerPrintFileExisted_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool finger_print_file_existed = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearFingerPrintFileExisted() {

      fingerPrintFileExisted_ = false;
      onChanged();
      return this;
    }

    private int removedSinceFingerPrintsFiles_ ;
    /**
     * <code>int32 removed_since_finger_prints_files = 8;</code>
     * @return The removedSinceFingerPrintsFiles.
     */
    @java.lang.Override
    public int getRemovedSinceFingerPrintsFiles() {
      return removedSinceFingerPrintsFiles_;
    }
    /**
     * <code>int32 removed_since_finger_prints_files = 8;</code>
     * @param value The removedSinceFingerPrintsFiles to set.
     * @return This builder for chaining.
     */
    public Builder setRemovedSinceFingerPrintsFiles(int value) {

      removedSinceFingerPrintsFiles_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 removed_since_finger_prints_files = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearRemovedSinceFingerPrintsFiles() {

      removedSinceFingerPrintsFiles_ = 0;
      onChanged();
      return this;
    }

    private int addedSinceFingerPrintsFiles_ ;
    /**
     * <code>int32 added_since_finger_prints_files = 9;</code>
     * @return The addedSinceFingerPrintsFiles.
     */
    @java.lang.Override
    public int getAddedSinceFingerPrintsFiles() {
      return addedSinceFingerPrintsFiles_;
    }
    /**
     * <code>int32 added_since_finger_prints_files = 9;</code>
     * @param value The addedSinceFingerPrintsFiles to set.
     * @return This builder for chaining.
     */
    public Builder setAddedSinceFingerPrintsFiles(int value) {

      addedSinceFingerPrintsFiles_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 added_since_finger_prints_files = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearAddedSinceFingerPrintsFiles() {

      addedSinceFingerPrintsFiles_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile> changesToFingerPrintFiles_ =
      java.util.Collections.emptyList();
    private void ensureChangesToFingerPrintFilesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        changesToFingerPrintFiles_ = new java.util.ArrayList<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile>(changesToFingerPrintFiles_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.build.gradle.internal.cxx.configure.EncodedChangedFile, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder, com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder> changesToFingerPrintFilesBuilder_;

    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public java.util.List<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile> getChangesToFingerPrintFilesList() {
      if (changesToFingerPrintFilesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(changesToFingerPrintFiles_);
      } else {
        return changesToFingerPrintFilesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public int getChangesToFingerPrintFilesCount() {
      if (changesToFingerPrintFilesBuilder_ == null) {
        return changesToFingerPrintFiles_.size();
      } else {
        return changesToFingerPrintFilesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public com.android.build.gradle.internal.cxx.configure.EncodedChangedFile getChangesToFingerPrintFiles(int index) {
      if (changesToFingerPrintFilesBuilder_ == null) {
        return changesToFingerPrintFiles_.get(index);
      } else {
        return changesToFingerPrintFilesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public Builder setChangesToFingerPrintFiles(
        int index, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile value) {
      if (changesToFingerPrintFilesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChangesToFingerPrintFilesIsMutable();
        changesToFingerPrintFiles_.set(index, value);
        onChanged();
      } else {
        changesToFingerPrintFilesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public Builder setChangesToFingerPrintFiles(
        int index, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder builderForValue) {
      if (changesToFingerPrintFilesBuilder_ == null) {
        ensureChangesToFingerPrintFilesIsMutable();
        changesToFingerPrintFiles_.set(index, builderForValue.build());
        onChanged();
      } else {
        changesToFingerPrintFilesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public Builder addChangesToFingerPrintFiles(com.android.build.gradle.internal.cxx.configure.EncodedChangedFile value) {
      if (changesToFingerPrintFilesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChangesToFingerPrintFilesIsMutable();
        changesToFingerPrintFiles_.add(value);
        onChanged();
      } else {
        changesToFingerPrintFilesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public Builder addChangesToFingerPrintFiles(
        int index, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile value) {
      if (changesToFingerPrintFilesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChangesToFingerPrintFilesIsMutable();
        changesToFingerPrintFiles_.add(index, value);
        onChanged();
      } else {
        changesToFingerPrintFilesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public Builder addChangesToFingerPrintFiles(
        com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder builderForValue) {
      if (changesToFingerPrintFilesBuilder_ == null) {
        ensureChangesToFingerPrintFilesIsMutable();
        changesToFingerPrintFiles_.add(builderForValue.build());
        onChanged();
      } else {
        changesToFingerPrintFilesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public Builder addChangesToFingerPrintFiles(
        int index, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder builderForValue) {
      if (changesToFingerPrintFilesBuilder_ == null) {
        ensureChangesToFingerPrintFilesIsMutable();
        changesToFingerPrintFiles_.add(index, builderForValue.build());
        onChanged();
      } else {
        changesToFingerPrintFilesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public Builder addAllChangesToFingerPrintFiles(
        java.lang.Iterable<? extends com.android.build.gradle.internal.cxx.configure.EncodedChangedFile> values) {
      if (changesToFingerPrintFilesBuilder_ == null) {
        ensureChangesToFingerPrintFilesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, changesToFingerPrintFiles_);
        onChanged();
      } else {
        changesToFingerPrintFilesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public Builder clearChangesToFingerPrintFiles() {
      if (changesToFingerPrintFilesBuilder_ == null) {
        changesToFingerPrintFiles_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        changesToFingerPrintFilesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public Builder removeChangesToFingerPrintFiles(int index) {
      if (changesToFingerPrintFilesBuilder_ == null) {
        ensureChangesToFingerPrintFilesIsMutable();
        changesToFingerPrintFiles_.remove(index);
        onChanged();
      } else {
        changesToFingerPrintFilesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder getChangesToFingerPrintFilesBuilder(
        int index) {
      return getChangesToFingerPrintFilesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder getChangesToFingerPrintFilesOrBuilder(
        int index) {
      if (changesToFingerPrintFilesBuilder_ == null) {
        return changesToFingerPrintFiles_.get(index);  } else {
        return changesToFingerPrintFilesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public java.util.List<? extends com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder>
         getChangesToFingerPrintFilesOrBuilderList() {
      if (changesToFingerPrintFilesBuilder_ != null) {
        return changesToFingerPrintFilesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(changesToFingerPrintFiles_);
      }
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder addChangesToFingerPrintFilesBuilder() {
      return getChangesToFingerPrintFilesFieldBuilder().addBuilder(
          com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.getDefaultInstance());
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder addChangesToFingerPrintFilesBuilder(
        int index) {
      return getChangesToFingerPrintFilesFieldBuilder().addBuilder(
          index, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.getDefaultInstance());
    }
    /**
     * <code>repeated .EncodedChangedFile changes_to_finger_print_files = 10;</code>
     */
    public java.util.List<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder>
         getChangesToFingerPrintFilesBuilderList() {
      return getChangesToFingerPrintFilesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.build.gradle.internal.cxx.configure.EncodedChangedFile, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder, com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder>
        getChangesToFingerPrintFilesFieldBuilder() {
      if (changesToFingerPrintFilesBuilder_ == null) {
        changesToFingerPrintFilesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.android.build.gradle.internal.cxx.configure.EncodedChangedFile, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder, com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder>(
                changesToFingerPrintFiles_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        changesToFingerPrintFiles_ = null;
      }
      return changesToFingerPrintFilesBuilder_;
    }

    private int unchangedFingerPrintFiles_ ;
    /**
     * <code>int32 unchanged_finger_print_files = 11;</code>
     * @return The unchangedFingerPrintFiles.
     */
    @java.lang.Override
    public int getUnchangedFingerPrintFiles() {
      return unchangedFingerPrintFiles_;
    }
    /**
     * <code>int32 unchanged_finger_print_files = 11;</code>
     * @param value The unchangedFingerPrintFiles to set.
     * @return This builder for chaining.
     */
    public Builder setUnchangedFingerPrintFiles(int value) {

      unchangedFingerPrintFiles_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 unchanged_finger_print_files = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearUnchangedFingerPrintFiles() {

      unchangedFingerPrintFiles_ = 0;
      onChanged();
      return this;
    }

    private int configureType_ = 0;
    /**
     * <code>.ConfigureType configure_type = 12;</code>
     * @return The enum numeric value on the wire for configureType.
     */
    @java.lang.Override public int getConfigureTypeValue() {
      return configureType_;
    }
    /**
     * <code>.ConfigureType configure_type = 12;</code>
     * @param value The enum numeric value on the wire for configureType to set.
     * @return This builder for chaining.
     */
    public Builder setConfigureTypeValue(int value) {

      configureType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.ConfigureType configure_type = 12;</code>
     * @return The configureType.
     */
    @java.lang.Override
    public com.android.build.gradle.internal.cxx.configure.ConfigureType getConfigureType() {
      @SuppressWarnings("deprecation")
      com.android.build.gradle.internal.cxx.configure.ConfigureType result = com.android.build.gradle.internal.cxx.configure.ConfigureType.valueOf(configureType_);
      return result == null ? com.android.build.gradle.internal.cxx.configure.ConfigureType.UNRECOGNIZED : result;
    }
    /**
     * <code>.ConfigureType configure_type = 12;</code>
     * @param value The configureType to set.
     * @return This builder for chaining.
     */
    public Builder setConfigureType(com.android.build.gradle.internal.cxx.configure.ConfigureType value) {
      if (value == null) {
        throw new NullPointerException();
      }

      configureType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.ConfigureType configure_type = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearConfigureType() {

      configureType_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile> softConfigureReasons_ =
      java.util.Collections.emptyList();
    private void ensureSoftConfigureReasonsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        softConfigureReasons_ = new java.util.ArrayList<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile>(softConfigureReasons_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.build.gradle.internal.cxx.configure.EncodedChangedFile, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder, com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder> softConfigureReasonsBuilder_;

    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public java.util.List<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile> getSoftConfigureReasonsList() {
      if (softConfigureReasonsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(softConfigureReasons_);
      } else {
        return softConfigureReasonsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public int getSoftConfigureReasonsCount() {
      if (softConfigureReasonsBuilder_ == null) {
        return softConfigureReasons_.size();
      } else {
        return softConfigureReasonsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public com.android.build.gradle.internal.cxx.configure.EncodedChangedFile getSoftConfigureReasons(int index) {
      if (softConfigureReasonsBuilder_ == null) {
        return softConfigureReasons_.get(index);
      } else {
        return softConfigureReasonsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public Builder setSoftConfigureReasons(
        int index, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile value) {
      if (softConfigureReasonsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSoftConfigureReasonsIsMutable();
        softConfigureReasons_.set(index, value);
        onChanged();
      } else {
        softConfigureReasonsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public Builder setSoftConfigureReasons(
        int index, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder builderForValue) {
      if (softConfigureReasonsBuilder_ == null) {
        ensureSoftConfigureReasonsIsMutable();
        softConfigureReasons_.set(index, builderForValue.build());
        onChanged();
      } else {
        softConfigureReasonsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public Builder addSoftConfigureReasons(com.android.build.gradle.internal.cxx.configure.EncodedChangedFile value) {
      if (softConfigureReasonsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSoftConfigureReasonsIsMutable();
        softConfigureReasons_.add(value);
        onChanged();
      } else {
        softConfigureReasonsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public Builder addSoftConfigureReasons(
        int index, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile value) {
      if (softConfigureReasonsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSoftConfigureReasonsIsMutable();
        softConfigureReasons_.add(index, value);
        onChanged();
      } else {
        softConfigureReasonsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public Builder addSoftConfigureReasons(
        com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder builderForValue) {
      if (softConfigureReasonsBuilder_ == null) {
        ensureSoftConfigureReasonsIsMutable();
        softConfigureReasons_.add(builderForValue.build());
        onChanged();
      } else {
        softConfigureReasonsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public Builder addSoftConfigureReasons(
        int index, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder builderForValue) {
      if (softConfigureReasonsBuilder_ == null) {
        ensureSoftConfigureReasonsIsMutable();
        softConfigureReasons_.add(index, builderForValue.build());
        onChanged();
      } else {
        softConfigureReasonsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public Builder addAllSoftConfigureReasons(
        java.lang.Iterable<? extends com.android.build.gradle.internal.cxx.configure.EncodedChangedFile> values) {
      if (softConfigureReasonsBuilder_ == null) {
        ensureSoftConfigureReasonsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, softConfigureReasons_);
        onChanged();
      } else {
        softConfigureReasonsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public Builder clearSoftConfigureReasons() {
      if (softConfigureReasonsBuilder_ == null) {
        softConfigureReasons_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        softConfigureReasonsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public Builder removeSoftConfigureReasons(int index) {
      if (softConfigureReasonsBuilder_ == null) {
        ensureSoftConfigureReasonsIsMutable();
        softConfigureReasons_.remove(index);
        onChanged();
      } else {
        softConfigureReasonsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder getSoftConfigureReasonsBuilder(
        int index) {
      return getSoftConfigureReasonsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder getSoftConfigureReasonsOrBuilder(
        int index) {
      if (softConfigureReasonsBuilder_ == null) {
        return softConfigureReasons_.get(index);  } else {
        return softConfigureReasonsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public java.util.List<? extends com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder>
         getSoftConfigureReasonsOrBuilderList() {
      if (softConfigureReasonsBuilder_ != null) {
        return softConfigureReasonsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(softConfigureReasons_);
      }
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder addSoftConfigureReasonsBuilder() {
      return getSoftConfigureReasonsFieldBuilder().addBuilder(
          com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.getDefaultInstance());
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder addSoftConfigureReasonsBuilder(
        int index) {
      return getSoftConfigureReasonsFieldBuilder().addBuilder(
          index, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.getDefaultInstance());
    }
    /**
     * <code>repeated .EncodedChangedFile soft_configure_reasons = 13;</code>
     */
    public java.util.List<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder>
         getSoftConfigureReasonsBuilderList() {
      return getSoftConfigureReasonsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.build.gradle.internal.cxx.configure.EncodedChangedFile, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder, com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder>
        getSoftConfigureReasonsFieldBuilder() {
      if (softConfigureReasonsBuilder_ == null) {
        softConfigureReasonsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.android.build.gradle.internal.cxx.configure.EncodedChangedFile, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder, com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder>(
                softConfigureReasons_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        softConfigureReasons_ = null;
      }
      return softConfigureReasonsBuilder_;
    }

    private java.util.List<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile> hardConfigureReasons_ =
      java.util.Collections.emptyList();
    private void ensureHardConfigureReasonsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        hardConfigureReasons_ = new java.util.ArrayList<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile>(hardConfigureReasons_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.build.gradle.internal.cxx.configure.EncodedChangedFile, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder, com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder> hardConfigureReasonsBuilder_;

    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public java.util.List<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile> getHardConfigureReasonsList() {
      if (hardConfigureReasonsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(hardConfigureReasons_);
      } else {
        return hardConfigureReasonsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public int getHardConfigureReasonsCount() {
      if (hardConfigureReasonsBuilder_ == null) {
        return hardConfigureReasons_.size();
      } else {
        return hardConfigureReasonsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public com.android.build.gradle.internal.cxx.configure.EncodedChangedFile getHardConfigureReasons(int index) {
      if (hardConfigureReasonsBuilder_ == null) {
        return hardConfigureReasons_.get(index);
      } else {
        return hardConfigureReasonsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public Builder setHardConfigureReasons(
        int index, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile value) {
      if (hardConfigureReasonsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHardConfigureReasonsIsMutable();
        hardConfigureReasons_.set(index, value);
        onChanged();
      } else {
        hardConfigureReasonsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public Builder setHardConfigureReasons(
        int index, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder builderForValue) {
      if (hardConfigureReasonsBuilder_ == null) {
        ensureHardConfigureReasonsIsMutable();
        hardConfigureReasons_.set(index, builderForValue.build());
        onChanged();
      } else {
        hardConfigureReasonsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public Builder addHardConfigureReasons(com.android.build.gradle.internal.cxx.configure.EncodedChangedFile value) {
      if (hardConfigureReasonsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHardConfigureReasonsIsMutable();
        hardConfigureReasons_.add(value);
        onChanged();
      } else {
        hardConfigureReasonsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public Builder addHardConfigureReasons(
        int index, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile value) {
      if (hardConfigureReasonsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHardConfigureReasonsIsMutable();
        hardConfigureReasons_.add(index, value);
        onChanged();
      } else {
        hardConfigureReasonsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public Builder addHardConfigureReasons(
        com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder builderForValue) {
      if (hardConfigureReasonsBuilder_ == null) {
        ensureHardConfigureReasonsIsMutable();
        hardConfigureReasons_.add(builderForValue.build());
        onChanged();
      } else {
        hardConfigureReasonsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public Builder addHardConfigureReasons(
        int index, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder builderForValue) {
      if (hardConfigureReasonsBuilder_ == null) {
        ensureHardConfigureReasonsIsMutable();
        hardConfigureReasons_.add(index, builderForValue.build());
        onChanged();
      } else {
        hardConfigureReasonsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public Builder addAllHardConfigureReasons(
        java.lang.Iterable<? extends com.android.build.gradle.internal.cxx.configure.EncodedChangedFile> values) {
      if (hardConfigureReasonsBuilder_ == null) {
        ensureHardConfigureReasonsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hardConfigureReasons_);
        onChanged();
      } else {
        hardConfigureReasonsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public Builder clearHardConfigureReasons() {
      if (hardConfigureReasonsBuilder_ == null) {
        hardConfigureReasons_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        hardConfigureReasonsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public Builder removeHardConfigureReasons(int index) {
      if (hardConfigureReasonsBuilder_ == null) {
        ensureHardConfigureReasonsIsMutable();
        hardConfigureReasons_.remove(index);
        onChanged();
      } else {
        hardConfigureReasonsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder getHardConfigureReasonsBuilder(
        int index) {
      return getHardConfigureReasonsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder getHardConfigureReasonsOrBuilder(
        int index) {
      if (hardConfigureReasonsBuilder_ == null) {
        return hardConfigureReasons_.get(index);  } else {
        return hardConfigureReasonsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public java.util.List<? extends com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder>
         getHardConfigureReasonsOrBuilderList() {
      if (hardConfigureReasonsBuilder_ != null) {
        return hardConfigureReasonsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(hardConfigureReasons_);
      }
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder addHardConfigureReasonsBuilder() {
      return getHardConfigureReasonsFieldBuilder().addBuilder(
          com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.getDefaultInstance());
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder addHardConfigureReasonsBuilder(
        int index) {
      return getHardConfigureReasonsFieldBuilder().addBuilder(
          index, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.getDefaultInstance());
    }
    /**
     * <code>repeated .EncodedChangedFile hard_configure_reasons = 14;</code>
     */
    public java.util.List<com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder>
         getHardConfigureReasonsBuilderList() {
      return getHardConfigureReasonsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.build.gradle.internal.cxx.configure.EncodedChangedFile, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder, com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder>
        getHardConfigureReasonsFieldBuilder() {
      if (hardConfigureReasonsBuilder_ == null) {
        hardConfigureReasonsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.android.build.gradle.internal.cxx.configure.EncodedChangedFile, com.android.build.gradle.internal.cxx.configure.EncodedChangedFile.Builder, com.android.build.gradle.internal.cxx.configure.EncodedChangedFileOrBuilder>(
                hardConfigureReasons_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        hardConfigureReasons_ = null;
      }
      return hardConfigureReasonsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:EncodedConfigureInvalidationState)
  }

  // @@protoc_insertion_point(class_scope:EncodedConfigureInvalidationState)
  private static final com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState();
  }

  public static com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EncodedConfigureInvalidationState>
      PARSER = new com.google.protobuf.AbstractParser<EncodedConfigureInvalidationState>() {
    @java.lang.Override
    public EncodedConfigureInvalidationState parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EncodedConfigureInvalidationState(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EncodedConfigureInvalidationState> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EncodedConfigureInvalidationState> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.android.build.gradle.internal.cxx.configure.EncodedConfigureInvalidationState getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

